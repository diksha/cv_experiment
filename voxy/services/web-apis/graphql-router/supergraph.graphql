schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.2", for: EXECUTION) {
  query: Query
  mutation: Mutation
}

directive @join__field(
  graph: join__Graph!
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
  override: String
  usedOverridden: Boolean
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(
  graph: join__Graph!
  key: join__FieldSet
  extension: Boolean! = false
  resolvable: Boolean! = true
) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

type AnalyticsType @join__type(graph: LEGACY_SUBGRAPH) {
  series(fromUtc: DateTime!, toUtc: DateTime!, groupBy: String!): [SeriesType]
  metrics(fromUtc: DateTime!, toUtc: DateTime!, groupBy: String!): GenericScalar
}

"""
An enumeration.
"""
enum ApiCommentActivityTypeChoices @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Comment
  """
  COMMENT

  """
  Assign
  """
  ASSIGN

  """
  Log
  """
  LOG

  """
  Resolve
  """
  RESOLVE

  """
  Reopen
  """
  REOPEN
}

"""
An enumeration.
"""
enum ApiIncidentPriorityChoices @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Low Priority
  """
  LOW

  """
  Medium Priority
  """
  MEDIUM

  """
  High Priority
  """
  HIGH
}

"""
An enumeration.
"""
enum ApiIncidentReviewLevelChoices @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Red Level
  """
  RED

  """
  Yello Level
  """
  YELLOW

  """
  Green Level
  """
  GREEN

  """
  Gold Level
  """
  GOLD
}

"""
An enumeration.
"""
enum ApiIncidentStatusChoices @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Open
  """
  OPEN

  """
  In Progress
  """
  IN_PROGRESS

  """
  Resolved
  """
  RESOLVED
}

"""
An enumeration.
"""
enum ApiOrganizationTimezoneChoices @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Africa/Abidjan
  """
  AFRICA_ABIDJAN

  """
  Africa/Accra
  """
  AFRICA_ACCRA

  """
  Africa/Addis_Ababa
  """
  AFRICA_ADDIS_ABABA

  """
  Africa/Algiers
  """
  AFRICA_ALGIERS

  """
  Africa/Asmara
  """
  AFRICA_ASMARA

  """
  Africa/Bamako
  """
  AFRICA_BAMAKO

  """
  Africa/Bangui
  """
  AFRICA_BANGUI

  """
  Africa/Banjul
  """
  AFRICA_BANJUL

  """
  Africa/Bissau
  """
  AFRICA_BISSAU

  """
  Africa/Blantyre
  """
  AFRICA_BLANTYRE

  """
  Africa/Brazzaville
  """
  AFRICA_BRAZZAVILLE

  """
  Africa/Bujumbura
  """
  AFRICA_BUJUMBURA

  """
  Africa/Cairo
  """
  AFRICA_CAIRO

  """
  Africa/Casablanca
  """
  AFRICA_CASABLANCA

  """
  Africa/Ceuta
  """
  AFRICA_CEUTA

  """
  Africa/Conakry
  """
  AFRICA_CONAKRY

  """
  Africa/Dakar
  """
  AFRICA_DAKAR

  """
  Africa/Dar_es_Salaam
  """
  AFRICA_DAR_ES_SALAAM

  """
  Africa/Djibouti
  """
  AFRICA_DJIBOUTI

  """
  Africa/Douala
  """
  AFRICA_DOUALA

  """
  Africa/El_Aaiun
  """
  AFRICA_EL_AAIUN

  """
  Africa/Freetown
  """
  AFRICA_FREETOWN

  """
  Africa/Gaborone
  """
  AFRICA_GABORONE

  """
  Africa/Harare
  """
  AFRICA_HARARE

  """
  Africa/Johannesburg
  """
  AFRICA_JOHANNESBURG

  """
  Africa/Juba
  """
  AFRICA_JUBA

  """
  Africa/Kampala
  """
  AFRICA_KAMPALA

  """
  Africa/Khartoum
  """
  AFRICA_KHARTOUM

  """
  Africa/Kigali
  """
  AFRICA_KIGALI

  """
  Africa/Kinshasa
  """
  AFRICA_KINSHASA

  """
  Africa/Lagos
  """
  AFRICA_LAGOS

  """
  Africa/Libreville
  """
  AFRICA_LIBREVILLE

  """
  Africa/Lome
  """
  AFRICA_LOME

  """
  Africa/Luanda
  """
  AFRICA_LUANDA

  """
  Africa/Lubumbashi
  """
  AFRICA_LUBUMBASHI

  """
  Africa/Lusaka
  """
  AFRICA_LUSAKA

  """
  Africa/Malabo
  """
  AFRICA_MALABO

  """
  Africa/Maputo
  """
  AFRICA_MAPUTO

  """
  Africa/Maseru
  """
  AFRICA_MASERU

  """
  Africa/Mbabane
  """
  AFRICA_MBABANE

  """
  Africa/Mogadishu
  """
  AFRICA_MOGADISHU

  """
  Africa/Monrovia
  """
  AFRICA_MONROVIA

  """
  Africa/Nairobi
  """
  AFRICA_NAIROBI

  """
  Africa/Ndjamena
  """
  AFRICA_NDJAMENA

  """
  Africa/Niamey
  """
  AFRICA_NIAMEY

  """
  Africa/Nouakchott
  """
  AFRICA_NOUAKCHOTT

  """
  Africa/Ouagadougou
  """
  AFRICA_OUAGADOUGOU

  """
  Africa/Porto-Novo
  """
  AFRICA_PORTO_NOVO

  """
  Africa/Sao_Tome
  """
  AFRICA_SAO_TOME

  """
  Africa/Tripoli
  """
  AFRICA_TRIPOLI

  """
  Africa/Tunis
  """
  AFRICA_TUNIS

  """
  Africa/Windhoek
  """
  AFRICA_WINDHOEK

  """
  America/Adak
  """
  AMERICA_ADAK

  """
  America/Anchorage
  """
  AMERICA_ANCHORAGE

  """
  America/Anguilla
  """
  AMERICA_ANGUILLA

  """
  America/Antigua
  """
  AMERICA_ANTIGUA

  """
  America/Araguaina
  """
  AMERICA_ARAGUAINA

  """
  America/Argentina/Buenos_Aires
  """
  AMERICA_ARGENTINA_BUENOS_AIRES

  """
  America/Argentina/Catamarca
  """
  AMERICA_ARGENTINA_CATAMARCA

  """
  America/Argentina/Cordoba
  """
  AMERICA_ARGENTINA_CORDOBA

  """
  America/Argentina/Jujuy
  """
  AMERICA_ARGENTINA_JUJUY

  """
  America/Argentina/La_Rioja
  """
  AMERICA_ARGENTINA_LA_RIOJA

  """
  America/Argentina/Mendoza
  """
  AMERICA_ARGENTINA_MENDOZA

  """
  America/Argentina/Rio_Gallegos
  """
  AMERICA_ARGENTINA_RIO_GALLEGOS

  """
  America/Argentina/Salta
  """
  AMERICA_ARGENTINA_SALTA

  """
  America/Argentina/San_Juan
  """
  AMERICA_ARGENTINA_SAN_JUAN

  """
  America/Argentina/San_Luis
  """
  AMERICA_ARGENTINA_SAN_LUIS

  """
  America/Argentina/Tucuman
  """
  AMERICA_ARGENTINA_TUCUMAN

  """
  America/Argentina/Ushuaia
  """
  AMERICA_ARGENTINA_USHUAIA

  """
  America/Aruba
  """
  AMERICA_ARUBA

  """
  America/Asuncion
  """
  AMERICA_ASUNCION

  """
  America/Atikokan
  """
  AMERICA_ATIKOKAN

  """
  America/Bahia
  """
  AMERICA_BAHIA

  """
  America/Bahia_Banderas
  """
  AMERICA_BAHIA_BANDERAS

  """
  America/Barbados
  """
  AMERICA_BARBADOS

  """
  America/Belem
  """
  AMERICA_BELEM

  """
  America/Belize
  """
  AMERICA_BELIZE

  """
  America/Blanc-Sablon
  """
  AMERICA_BLANC_SABLON

  """
  America/Boa_Vista
  """
  AMERICA_BOA_VISTA

  """
  America/Bogota
  """
  AMERICA_BOGOTA

  """
  America/Boise
  """
  AMERICA_BOISE

  """
  America/Cambridge_Bay
  """
  AMERICA_CAMBRIDGE_BAY

  """
  America/Campo_Grande
  """
  AMERICA_CAMPO_GRANDE

  """
  America/Cancun
  """
  AMERICA_CANCUN

  """
  America/Caracas
  """
  AMERICA_CARACAS

  """
  America/Cayenne
  """
  AMERICA_CAYENNE

  """
  America/Cayman
  """
  AMERICA_CAYMAN

  """
  America/Chicago
  """
  AMERICA_CHICAGO

  """
  America/Chihuahua
  """
  AMERICA_CHIHUAHUA

  """
  America/Costa_Rica
  """
  AMERICA_COSTA_RICA

  """
  America/Creston
  """
  AMERICA_CRESTON

  """
  America/Cuiaba
  """
  AMERICA_CUIABA

  """
  America/Curacao
  """
  AMERICA_CURACAO

  """
  America/Danmarkshavn
  """
  AMERICA_DANMARKSHAVN

  """
  America/Dawson
  """
  AMERICA_DAWSON

  """
  America/Dawson_Creek
  """
  AMERICA_DAWSON_CREEK

  """
  America/Denver
  """
  AMERICA_DENVER

  """
  America/Detroit
  """
  AMERICA_DETROIT

  """
  America/Dominica
  """
  AMERICA_DOMINICA

  """
  America/Edmonton
  """
  AMERICA_EDMONTON

  """
  America/Eirunepe
  """
  AMERICA_EIRUNEPE

  """
  America/El_Salvador
  """
  AMERICA_EL_SALVADOR

  """
  America/Fort_Nelson
  """
  AMERICA_FORT_NELSON

  """
  America/Fortaleza
  """
  AMERICA_FORTALEZA

  """
  America/Glace_Bay
  """
  AMERICA_GLACE_BAY

  """
  America/Goose_Bay
  """
  AMERICA_GOOSE_BAY

  """
  America/Grand_Turk
  """
  AMERICA_GRAND_TURK

  """
  America/Grenada
  """
  AMERICA_GRENADA

  """
  America/Guadeloupe
  """
  AMERICA_GUADELOUPE

  """
  America/Guatemala
  """
  AMERICA_GUATEMALA

  """
  America/Guayaquil
  """
  AMERICA_GUAYAQUIL

  """
  America/Guyana
  """
  AMERICA_GUYANA

  """
  America/Halifax
  """
  AMERICA_HALIFAX

  """
  America/Havana
  """
  AMERICA_HAVANA

  """
  America/Hermosillo
  """
  AMERICA_HERMOSILLO

  """
  America/Indiana/Indianapolis
  """
  AMERICA_INDIANA_INDIANAPOLIS

  """
  America/Indiana/Knox
  """
  AMERICA_INDIANA_KNOX

  """
  America/Indiana/Marengo
  """
  AMERICA_INDIANA_MARENGO

  """
  America/Indiana/Petersburg
  """
  AMERICA_INDIANA_PETERSBURG

  """
  America/Indiana/Tell_City
  """
  AMERICA_INDIANA_TELL_CITY

  """
  America/Indiana/Vevay
  """
  AMERICA_INDIANA_VEVAY

  """
  America/Indiana/Vincennes
  """
  AMERICA_INDIANA_VINCENNES

  """
  America/Indiana/Winamac
  """
  AMERICA_INDIANA_WINAMAC

  """
  America/Inuvik
  """
  AMERICA_INUVIK

  """
  America/Iqaluit
  """
  AMERICA_IQALUIT

  """
  America/Jamaica
  """
  AMERICA_JAMAICA

  """
  America/Juneau
  """
  AMERICA_JUNEAU

  """
  America/Kentucky/Louisville
  """
  AMERICA_KENTUCKY_LOUISVILLE

  """
  America/Kentucky/Monticello
  """
  AMERICA_KENTUCKY_MONTICELLO

  """
  America/Kralendijk
  """
  AMERICA_KRALENDIJK

  """
  America/La_Paz
  """
  AMERICA_LA_PAZ

  """
  America/Lima
  """
  AMERICA_LIMA

  """
  America/Los_Angeles
  """
  AMERICA_LOS_ANGELES

  """
  America/Lower_Princes
  """
  AMERICA_LOWER_PRINCES

  """
  America/Maceio
  """
  AMERICA_MACEIO

  """
  America/Managua
  """
  AMERICA_MANAGUA

  """
  America/Manaus
  """
  AMERICA_MANAUS

  """
  America/Marigot
  """
  AMERICA_MARIGOT

  """
  America/Martinique
  """
  AMERICA_MARTINIQUE

  """
  America/Matamoros
  """
  AMERICA_MATAMOROS

  """
  America/Mazatlan
  """
  AMERICA_MAZATLAN

  """
  America/Menominee
  """
  AMERICA_MENOMINEE

  """
  America/Merida
  """
  AMERICA_MERIDA

  """
  America/Metlakatla
  """
  AMERICA_METLAKATLA

  """
  America/Mexico_City
  """
  AMERICA_MEXICO_CITY

  """
  America/Miquelon
  """
  AMERICA_MIQUELON

  """
  America/Moncton
  """
  AMERICA_MONCTON

  """
  America/Monterrey
  """
  AMERICA_MONTERREY

  """
  America/Montevideo
  """
  AMERICA_MONTEVIDEO

  """
  America/Montserrat
  """
  AMERICA_MONTSERRAT

  """
  America/Nassau
  """
  AMERICA_NASSAU

  """
  America/New_York
  """
  AMERICA_NEW_YORK

  """
  America/Nipigon
  """
  AMERICA_NIPIGON

  """
  America/Nome
  """
  AMERICA_NOME

  """
  America/Noronha
  """
  AMERICA_NORONHA

  """
  America/North_Dakota/Beulah
  """
  AMERICA_NORTH_DAKOTA_BEULAH

  """
  America/North_Dakota/Center
  """
  AMERICA_NORTH_DAKOTA_CENTER

  """
  America/North_Dakota/New_Salem
  """
  AMERICA_NORTH_DAKOTA_NEW_SALEM

  """
  America/Nuuk
  """
  AMERICA_NUUK

  """
  America/Ojinaga
  """
  AMERICA_OJINAGA

  """
  America/Panama
  """
  AMERICA_PANAMA

  """
  America/Pangnirtung
  """
  AMERICA_PANGNIRTUNG

  """
  America/Paramaribo
  """
  AMERICA_PARAMARIBO

  """
  America/Phoenix
  """
  AMERICA_PHOENIX

  """
  America/Port-au-Prince
  """
  AMERICA_PORT_AU_PRINCE

  """
  America/Port_of_Spain
  """
  AMERICA_PORT_OF_SPAIN

  """
  America/Porto_Velho
  """
  AMERICA_PORTO_VELHO

  """
  America/Puerto_Rico
  """
  AMERICA_PUERTO_RICO

  """
  America/Punta_Arenas
  """
  AMERICA_PUNTA_ARENAS

  """
  America/Rainy_River
  """
  AMERICA_RAINY_RIVER

  """
  America/Rankin_Inlet
  """
  AMERICA_RANKIN_INLET

  """
  America/Recife
  """
  AMERICA_RECIFE

  """
  America/Regina
  """
  AMERICA_REGINA

  """
  America/Resolute
  """
  AMERICA_RESOLUTE

  """
  America/Rio_Branco
  """
  AMERICA_RIO_BRANCO

  """
  America/Santarem
  """
  AMERICA_SANTAREM

  """
  America/Santiago
  """
  AMERICA_SANTIAGO

  """
  America/Santo_Domingo
  """
  AMERICA_SANTO_DOMINGO

  """
  America/Sao_Paulo
  """
  AMERICA_SAO_PAULO

  """
  America/Scoresbysund
  """
  AMERICA_SCORESBYSUND

  """
  America/Sitka
  """
  AMERICA_SITKA

  """
  America/St_Barthelemy
  """
  AMERICA_ST_BARTHELEMY

  """
  America/St_Johns
  """
  AMERICA_ST_JOHNS

  """
  America/St_Kitts
  """
  AMERICA_ST_KITTS

  """
  America/St_Lucia
  """
  AMERICA_ST_LUCIA

  """
  America/St_Thomas
  """
  AMERICA_ST_THOMAS

  """
  America/St_Vincent
  """
  AMERICA_ST_VINCENT

  """
  America/Swift_Current
  """
  AMERICA_SWIFT_CURRENT

  """
  America/Tegucigalpa
  """
  AMERICA_TEGUCIGALPA

  """
  America/Thule
  """
  AMERICA_THULE

  """
  America/Thunder_Bay
  """
  AMERICA_THUNDER_BAY

  """
  America/Tijuana
  """
  AMERICA_TIJUANA

  """
  America/Toronto
  """
  AMERICA_TORONTO

  """
  America/Tortola
  """
  AMERICA_TORTOLA

  """
  America/Vancouver
  """
  AMERICA_VANCOUVER

  """
  America/Whitehorse
  """
  AMERICA_WHITEHORSE

  """
  America/Winnipeg
  """
  AMERICA_WINNIPEG

  """
  America/Yakutat
  """
  AMERICA_YAKUTAT

  """
  America/Yellowknife
  """
  AMERICA_YELLOWKNIFE

  """
  Antarctica/Casey
  """
  ANTARCTICA_CASEY

  """
  Antarctica/Davis
  """
  ANTARCTICA_DAVIS

  """
  Antarctica/DumontDUrville
  """
  ANTARCTICA_DUMONTDURVILLE

  """
  Antarctica/Macquarie
  """
  ANTARCTICA_MACQUARIE

  """
  Antarctica/Mawson
  """
  ANTARCTICA_MAWSON

  """
  Antarctica/McMurdo
  """
  ANTARCTICA_MCMURDO

  """
  Antarctica/Palmer
  """
  ANTARCTICA_PALMER

  """
  Antarctica/Rothera
  """
  ANTARCTICA_ROTHERA

  """
  Antarctica/Syowa
  """
  ANTARCTICA_SYOWA

  """
  Antarctica/Troll
  """
  ANTARCTICA_TROLL

  """
  Antarctica/Vostok
  """
  ANTARCTICA_VOSTOK

  """
  Arctic/Longyearbyen
  """
  ARCTIC_LONGYEARBYEN

  """
  Asia/Aden
  """
  ASIA_ADEN

  """
  Asia/Almaty
  """
  ASIA_ALMATY

  """
  Asia/Amman
  """
  ASIA_AMMAN

  """
  Asia/Anadyr
  """
  ASIA_ANADYR

  """
  Asia/Aqtau
  """
  ASIA_AQTAU

  """
  Asia/Aqtobe
  """
  ASIA_AQTOBE

  """
  Asia/Ashgabat
  """
  ASIA_ASHGABAT

  """
  Asia/Atyrau
  """
  ASIA_ATYRAU

  """
  Asia/Baghdad
  """
  ASIA_BAGHDAD

  """
  Asia/Bahrain
  """
  ASIA_BAHRAIN

  """
  Asia/Baku
  """
  ASIA_BAKU

  """
  Asia/Bangkok
  """
  ASIA_BANGKOK

  """
  Asia/Barnaul
  """
  ASIA_BARNAUL

  """
  Asia/Beirut
  """
  ASIA_BEIRUT

  """
  Asia/Bishkek
  """
  ASIA_BISHKEK

  """
  Asia/Brunei
  """
  ASIA_BRUNEI

  """
  Asia/Chita
  """
  ASIA_CHITA

  """
  Asia/Choibalsan
  """
  ASIA_CHOIBALSAN

  """
  Asia/Colombo
  """
  ASIA_COLOMBO

  """
  Asia/Damascus
  """
  ASIA_DAMASCUS

  """
  Asia/Dhaka
  """
  ASIA_DHAKA

  """
  Asia/Dili
  """
  ASIA_DILI

  """
  Asia/Dubai
  """
  ASIA_DUBAI

  """
  Asia/Dushanbe
  """
  ASIA_DUSHANBE

  """
  Asia/Famagusta
  """
  ASIA_FAMAGUSTA

  """
  Asia/Gaza
  """
  ASIA_GAZA

  """
  Asia/Hebron
  """
  ASIA_HEBRON

  """
  Asia/Ho_Chi_Minh
  """
  ASIA_HO_CHI_MINH

  """
  Asia/Hong_Kong
  """
  ASIA_HONG_KONG

  """
  Asia/Hovd
  """
  ASIA_HOVD

  """
  Asia/Irkutsk
  """
  ASIA_IRKUTSK

  """
  Asia/Jakarta
  """
  ASIA_JAKARTA

  """
  Asia/Jayapura
  """
  ASIA_JAYAPURA

  """
  Asia/Jerusalem
  """
  ASIA_JERUSALEM

  """
  Asia/Kabul
  """
  ASIA_KABUL

  """
  Asia/Kamchatka
  """
  ASIA_KAMCHATKA

  """
  Asia/Karachi
  """
  ASIA_KARACHI

  """
  Asia/Kathmandu
  """
  ASIA_KATHMANDU

  """
  Asia/Khandyga
  """
  ASIA_KHANDYGA

  """
  Asia/Kolkata
  """
  ASIA_KOLKATA

  """
  Asia/Krasnoyarsk
  """
  ASIA_KRASNOYARSK

  """
  Asia/Kuala_Lumpur
  """
  ASIA_KUALA_LUMPUR

  """
  Asia/Kuching
  """
  ASIA_KUCHING

  """
  Asia/Kuwait
  """
  ASIA_KUWAIT

  """
  Asia/Macau
  """
  ASIA_MACAU

  """
  Asia/Magadan
  """
  ASIA_MAGADAN

  """
  Asia/Makassar
  """
  ASIA_MAKASSAR

  """
  Asia/Manila
  """
  ASIA_MANILA

  """
  Asia/Muscat
  """
  ASIA_MUSCAT

  """
  Asia/Nicosia
  """
  ASIA_NICOSIA

  """
  Asia/Novokuznetsk
  """
  ASIA_NOVOKUZNETSK

  """
  Asia/Novosibirsk
  """
  ASIA_NOVOSIBIRSK

  """
  Asia/Omsk
  """
  ASIA_OMSK

  """
  Asia/Oral
  """
  ASIA_ORAL

  """
  Asia/Phnom_Penh
  """
  ASIA_PHNOM_PENH

  """
  Asia/Pontianak
  """
  ASIA_PONTIANAK

  """
  Asia/Pyongyang
  """
  ASIA_PYONGYANG

  """
  Asia/Qatar
  """
  ASIA_QATAR

  """
  Asia/Qostanay
  """
  ASIA_QOSTANAY

  """
  Asia/Qyzylorda
  """
  ASIA_QYZYLORDA

  """
  Asia/Riyadh
  """
  ASIA_RIYADH

  """
  Asia/Sakhalin
  """
  ASIA_SAKHALIN

  """
  Asia/Samarkand
  """
  ASIA_SAMARKAND

  """
  Asia/Seoul
  """
  ASIA_SEOUL

  """
  Asia/Shanghai
  """
  ASIA_SHANGHAI

  """
  Asia/Singapore
  """
  ASIA_SINGAPORE

  """
  Asia/Srednekolymsk
  """
  ASIA_SREDNEKOLYMSK

  """
  Asia/Taipei
  """
  ASIA_TAIPEI

  """
  Asia/Tashkent
  """
  ASIA_TASHKENT

  """
  Asia/Tbilisi
  """
  ASIA_TBILISI

  """
  Asia/Tehran
  """
  ASIA_TEHRAN

  """
  Asia/Thimphu
  """
  ASIA_THIMPHU

  """
  Asia/Tokyo
  """
  ASIA_TOKYO

  """
  Asia/Tomsk
  """
  ASIA_TOMSK

  """
  Asia/Ulaanbaatar
  """
  ASIA_ULAANBAATAR

  """
  Asia/Urumqi
  """
  ASIA_URUMQI

  """
  Asia/Ust-Nera
  """
  ASIA_UST_NERA

  """
  Asia/Vientiane
  """
  ASIA_VIENTIANE

  """
  Asia/Vladivostok
  """
  ASIA_VLADIVOSTOK

  """
  Asia/Yakutsk
  """
  ASIA_YAKUTSK

  """
  Asia/Yangon
  """
  ASIA_YANGON

  """
  Asia/Yekaterinburg
  """
  ASIA_YEKATERINBURG

  """
  Asia/Yerevan
  """
  ASIA_YEREVAN

  """
  Atlantic/Azores
  """
  ATLANTIC_AZORES

  """
  Atlantic/Bermuda
  """
  ATLANTIC_BERMUDA

  """
  Atlantic/Canary
  """
  ATLANTIC_CANARY

  """
  Atlantic/Cape_Verde
  """
  ATLANTIC_CAPE_VERDE

  """
  Atlantic/Faroe
  """
  ATLANTIC_FAROE

  """
  Atlantic/Madeira
  """
  ATLANTIC_MADEIRA

  """
  Atlantic/Reykjavik
  """
  ATLANTIC_REYKJAVIK

  """
  Atlantic/South_Georgia
  """
  ATLANTIC_SOUTH_GEORGIA

  """
  Atlantic/St_Helena
  """
  ATLANTIC_ST_HELENA

  """
  Atlantic/Stanley
  """
  ATLANTIC_STANLEY

  """
  Australia/Adelaide
  """
  AUSTRALIA_ADELAIDE

  """
  Australia/Brisbane
  """
  AUSTRALIA_BRISBANE

  """
  Australia/Broken_Hill
  """
  AUSTRALIA_BROKEN_HILL

  """
  Australia/Darwin
  """
  AUSTRALIA_DARWIN

  """
  Australia/Eucla
  """
  AUSTRALIA_EUCLA

  """
  Australia/Hobart
  """
  AUSTRALIA_HOBART

  """
  Australia/Lindeman
  """
  AUSTRALIA_LINDEMAN

  """
  Australia/Lord_Howe
  """
  AUSTRALIA_LORD_HOWE

  """
  Australia/Melbourne
  """
  AUSTRALIA_MELBOURNE

  """
  Australia/Perth
  """
  AUSTRALIA_PERTH

  """
  Australia/Sydney
  """
  AUSTRALIA_SYDNEY

  """
  Canada/Atlantic
  """
  CANADA_ATLANTIC

  """
  Canada/Central
  """
  CANADA_CENTRAL

  """
  Canada/Eastern
  """
  CANADA_EASTERN

  """
  Canada/Mountain
  """
  CANADA_MOUNTAIN

  """
  Canada/Newfoundland
  """
  CANADA_NEWFOUNDLAND

  """
  Canada/Pacific
  """
  CANADA_PACIFIC

  """
  Europe/Amsterdam
  """
  EUROPE_AMSTERDAM

  """
  Europe/Andorra
  """
  EUROPE_ANDORRA

  """
  Europe/Astrakhan
  """
  EUROPE_ASTRAKHAN

  """
  Europe/Athens
  """
  EUROPE_ATHENS

  """
  Europe/Belgrade
  """
  EUROPE_BELGRADE

  """
  Europe/Berlin
  """
  EUROPE_BERLIN

  """
  Europe/Bratislava
  """
  EUROPE_BRATISLAVA

  """
  Europe/Brussels
  """
  EUROPE_BRUSSELS

  """
  Europe/Bucharest
  """
  EUROPE_BUCHAREST

  """
  Europe/Budapest
  """
  EUROPE_BUDAPEST

  """
  Europe/Busingen
  """
  EUROPE_BUSINGEN

  """
  Europe/Chisinau
  """
  EUROPE_CHISINAU

  """
  Europe/Copenhagen
  """
  EUROPE_COPENHAGEN

  """
  Europe/Dublin
  """
  EUROPE_DUBLIN

  """
  Europe/Gibraltar
  """
  EUROPE_GIBRALTAR

  """
  Europe/Guernsey
  """
  EUROPE_GUERNSEY

  """
  Europe/Helsinki
  """
  EUROPE_HELSINKI

  """
  Europe/Isle_of_Man
  """
  EUROPE_ISLE_OF_MAN

  """
  Europe/Istanbul
  """
  EUROPE_ISTANBUL

  """
  Europe/Jersey
  """
  EUROPE_JERSEY

  """
  Europe/Kaliningrad
  """
  EUROPE_KALININGRAD

  """
  Europe/Kiev
  """
  EUROPE_KIEV

  """
  Europe/Kirov
  """
  EUROPE_KIROV

  """
  Europe/Lisbon
  """
  EUROPE_LISBON

  """
  Europe/Ljubljana
  """
  EUROPE_LJUBLJANA

  """
  Europe/London
  """
  EUROPE_LONDON

  """
  Europe/Luxembourg
  """
  EUROPE_LUXEMBOURG

  """
  Europe/Madrid
  """
  EUROPE_MADRID

  """
  Europe/Malta
  """
  EUROPE_MALTA

  """
  Europe/Mariehamn
  """
  EUROPE_MARIEHAMN

  """
  Europe/Minsk
  """
  EUROPE_MINSK

  """
  Europe/Monaco
  """
  EUROPE_MONACO

  """
  Europe/Moscow
  """
  EUROPE_MOSCOW

  """
  Europe/Oslo
  """
  EUROPE_OSLO

  """
  Europe/Paris
  """
  EUROPE_PARIS

  """
  Europe/Podgorica
  """
  EUROPE_PODGORICA

  """
  Europe/Prague
  """
  EUROPE_PRAGUE

  """
  Europe/Riga
  """
  EUROPE_RIGA

  """
  Europe/Rome
  """
  EUROPE_ROME

  """
  Europe/Samara
  """
  EUROPE_SAMARA

  """
  Europe/San_Marino
  """
  EUROPE_SAN_MARINO

  """
  Europe/Sarajevo
  """
  EUROPE_SARAJEVO

  """
  Europe/Saratov
  """
  EUROPE_SARATOV

  """
  Europe/Simferopol
  """
  EUROPE_SIMFEROPOL

  """
  Europe/Skopje
  """
  EUROPE_SKOPJE

  """
  Europe/Sofia
  """
  EUROPE_SOFIA

  """
  Europe/Stockholm
  """
  EUROPE_STOCKHOLM

  """
  Europe/Tallinn
  """
  EUROPE_TALLINN

  """
  Europe/Tirane
  """
  EUROPE_TIRANE

  """
  Europe/Ulyanovsk
  """
  EUROPE_ULYANOVSK

  """
  Europe/Uzhgorod
  """
  EUROPE_UZHGOROD

  """
  Europe/Vaduz
  """
  EUROPE_VADUZ

  """
  Europe/Vatican
  """
  EUROPE_VATICAN

  """
  Europe/Vienna
  """
  EUROPE_VIENNA

  """
  Europe/Vilnius
  """
  EUROPE_VILNIUS

  """
  Europe/Volgograd
  """
  EUROPE_VOLGOGRAD

  """
  Europe/Warsaw
  """
  EUROPE_WARSAW

  """
  Europe/Zagreb
  """
  EUROPE_ZAGREB

  """
  Europe/Zaporozhye
  """
  EUROPE_ZAPOROZHYE

  """
  Europe/Zurich
  """
  EUROPE_ZURICH

  """
  GMT
  """
  GMT

  """
  Indian/Antananarivo
  """
  INDIAN_ANTANANARIVO

  """
  Indian/Chagos
  """
  INDIAN_CHAGOS

  """
  Indian/Christmas
  """
  INDIAN_CHRISTMAS

  """
  Indian/Cocos
  """
  INDIAN_COCOS

  """
  Indian/Comoro
  """
  INDIAN_COMORO

  """
  Indian/Kerguelen
  """
  INDIAN_KERGUELEN

  """
  Indian/Mahe
  """
  INDIAN_MAHE

  """
  Indian/Maldives
  """
  INDIAN_MALDIVES

  """
  Indian/Mauritius
  """
  INDIAN_MAURITIUS

  """
  Indian/Mayotte
  """
  INDIAN_MAYOTTE

  """
  Indian/Reunion
  """
  INDIAN_REUNION

  """
  Pacific/Apia
  """
  PACIFIC_APIA

  """
  Pacific/Auckland
  """
  PACIFIC_AUCKLAND

  """
  Pacific/Bougainville
  """
  PACIFIC_BOUGAINVILLE

  """
  Pacific/Chatham
  """
  PACIFIC_CHATHAM

  """
  Pacific/Chuuk
  """
  PACIFIC_CHUUK

  """
  Pacific/Easter
  """
  PACIFIC_EASTER

  """
  Pacific/Efate
  """
  PACIFIC_EFATE

  """
  Pacific/Fakaofo
  """
  PACIFIC_FAKAOFO

  """
  Pacific/Fiji
  """
  PACIFIC_FIJI

  """
  Pacific/Funafuti
  """
  PACIFIC_FUNAFUTI

  """
  Pacific/Galapagos
  """
  PACIFIC_GALAPAGOS

  """
  Pacific/Gambier
  """
  PACIFIC_GAMBIER

  """
  Pacific/Guadalcanal
  """
  PACIFIC_GUADALCANAL

  """
  Pacific/Guam
  """
  PACIFIC_GUAM

  """
  Pacific/Honolulu
  """
  PACIFIC_HONOLULU

  """
  Pacific/Kanton
  """
  PACIFIC_KANTON

  """
  Pacific/Kiritimati
  """
  PACIFIC_KIRITIMATI

  """
  Pacific/Kosrae
  """
  PACIFIC_KOSRAE

  """
  Pacific/Kwajalein
  """
  PACIFIC_KWAJALEIN

  """
  Pacific/Majuro
  """
  PACIFIC_MAJURO

  """
  Pacific/Marquesas
  """
  PACIFIC_MARQUESAS

  """
  Pacific/Midway
  """
  PACIFIC_MIDWAY

  """
  Pacific/Nauru
  """
  PACIFIC_NAURU

  """
  Pacific/Niue
  """
  PACIFIC_NIUE

  """
  Pacific/Norfolk
  """
  PACIFIC_NORFOLK

  """
  Pacific/Noumea
  """
  PACIFIC_NOUMEA

  """
  Pacific/Pago_Pago
  """
  PACIFIC_PAGO_PAGO

  """
  Pacific/Palau
  """
  PACIFIC_PALAU

  """
  Pacific/Pitcairn
  """
  PACIFIC_PITCAIRN

  """
  Pacific/Pohnpei
  """
  PACIFIC_POHNPEI

  """
  Pacific/Port_Moresby
  """
  PACIFIC_PORT_MORESBY

  """
  Pacific/Rarotonga
  """
  PACIFIC_RAROTONGA

  """
  Pacific/Saipan
  """
  PACIFIC_SAIPAN

  """
  Pacific/Tahiti
  """
  PACIFIC_TAHITI

  """
  Pacific/Tarawa
  """
  PACIFIC_TARAWA

  """
  Pacific/Tongatapu
  """
  PACIFIC_TONGATAPU

  """
  Pacific/Wake
  """
  PACIFIC_WAKE

  """
  Pacific/Wallis
  """
  PACIFIC_WALLIS

  """
  US/Alaska
  """
  US_ALASKA

  """
  US/Arizona
  """
  US_ARIZONA

  """
  US/Central
  """
  US_CENTRAL

  """
  US/Eastern
  """
  US_EASTERN

  """
  US/Hawaii
  """
  US_HAWAII

  """
  US/Mountain
  """
  US_MOUNTAIN

  """
  US/Pacific
  """
  US_PACIFIC

  """
  UTC
  """
  UTC
}

"""
Assignee-related stats at a zone.
"""
type AssigneeStats @join__type(graph: LEGACY_SUBGRAPH) {
  assignee: UserType
  openCount: Int
  resolvedCount: Int
  resolvedTimeAvgMinutes: Int
}

type AssignSchema @join__type(graph: LEGACY_SUBGRAPH) {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  organization: OrganizationType
  incident: TaskType!
  assignedBy: UserType
  assignee: UserType
  note: String
}

type CameraConfigNewCreate @join__type(graph: LEGACY_SUBGRAPH) {
  cameraConfigNew: CameraConfigNewModelType
  isUpdated: Boolean
}

type CameraConfigNewModelType @join__type(graph: LEGACY_SUBGRAPH) {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  camera: CameraType!
  doors: JSONString
  drivingAreas: JSONString
  actionableRegions: JSONString
  intersections: JSONString
  endOfAisles: JSONString
  noPedestrianZones: JSONString
  version: Int!
}

type CameraCreate @join__type(graph: LEGACY_SUBGRAPH) {
  camera: CameraType
}

"""
Camera-related stats at a zone.
"""
type CameraStats @join__type(graph: LEGACY_SUBGRAPH) {
  camera: CameraType
  categoryStats: [IncidentCategoryStats]
}

type CameraType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  uuid: String!

  """
  User friendly name displayed throughout apps.
  """
  name: String!
  organization: OrganizationType
  zone: ZoneType
  cameraconfignewSet: [CameraConfigNewModelType!]!
  incidents(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): TaskTypeConnection!
}

type CameraTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [CameraTypeEdge]!
}

"""
A Relay edge containing a `CameraType` and its cursor.
"""
type CameraTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: CameraType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type CommentType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  text: String!
  owner: UserType
  incident: IncidentType
  activityType: ApiCommentActivityTypeChoices
  note: String
}

type CommentTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [CommentTypeEdge]!
}

"""
A Relay edge containing a `CommentType` and its cursor.
"""
type CommentTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: CommentType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type CreateComment @join__type(graph: LEGACY_SUBGRAPH) {
  comment: CommentType
}

type CreateIncidentFeedback @join__type(graph: LEGACY_SUBGRAPH) {
  incidentFeedback: IncidentFeedbackType
}

type CreateUserIncident @join__type(graph: LEGACY_SUBGRAPH) {
  users: [UserType]
}

type CurrentUserAddBookmark @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type CurrentUserOrganizationUpdate @join__type(graph: LEGACY_SUBGRAPH) {
  status: Boolean
}

type CurrentUserRemoveBookmark @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type CurrentUserSiteUpdate @join__type(graph: LEGACY_SUBGRAPH) {
  status: Boolean
  newSiteId: ID
}

"""
Feed item which contains 1 days worth of data.
"""
type DailyIncidentsFeedItem @join__type(graph: LEGACY_SUBGRAPH) {
  key: String!
  date: Date!

  """
  Time buckets covering all 24 hours of a single day, localized to the organization/zone timezone
  """
  timeBuckets: [IncidentFeedItemTimeBucket]!
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date @join__type(graph: LEGACY_SUBGRAPH)

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime @join__type(graph: LEGACY_SUBGRAPH)

type DeleteUserIncident @join__type(graph: LEGACY_SUBGRAPH) {
  assign: AssignSchema
}

"""
Feed item which represents a range of days without any incidents.
"""
type EmptyRangeFeedItem @join__type(graph: LEGACY_SUBGRAPH) {
  key: String!
  title: String!
  startDate: Date!
  endDate: Date!

  """
  Number of days covered by this feed item (at least 1)
  """
  dayCount: Int!
}

input FilterInputType @join__type(graph: LEGACY_SUBGRAPH) {
  key: String
  valueJson: String
}

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar @join__type(graph: LEGACY_SUBGRAPH)

type IncidentCategory @join__type(graph: LEGACY_SUBGRAPH) {
  key: String
  name: String
  incidentTypes: [IncidentTypeType]
}

"""
Incident category stats.
"""
type IncidentCategoryStats @join__type(graph: LEGACY_SUBGRAPH) {
  categoryKey: String
  totalCount: Int
}

type IncidentCreateScenario @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type IncidentExportVideo @join__type(graph: LEGACY_SUBGRAPH) {
  downloadUrl: String
}

type IncidentFeedbackSummaryType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uuid: UUID
  title: String!
  timestamp: DateTime!
  data: JSONString
  organization: OrganizationType
  camera: CameraType
  zone: ZoneType
  incidentType: IncidentTypeType
  priority: ApiIncidentPriorityChoices!
  status: ApiIncidentStatusChoices!
  experimental: Boolean!
  assignedBy(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection!
  assignedTo(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection!
  visibleToCustomers: Boolean!
  validFeedbackCount: Int!
  invalidFeedbackCount: Int!
  unsureFeedbackCount: Int!
  corruptFeedbackCount: Int!
  reviewLevel: ApiIncidentReviewLevelChoices!
  comments(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): CommentTypeConnection!
  userIncidents: [AssignSchema!]!
  feedback: [IncidentFeedbackType!]!
  pk: Int
  valid: [String]
  invalid: [String]
  unsure: [String]
  lastActivity: DateTime
}

type IncidentFeedbackSummaryTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [IncidentFeedbackSummaryTypeEdge]!
}

"""
A Relay edge containing a `IncidentFeedbackSummaryType` and its cursor.
"""
type IncidentFeedbackSummaryTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: IncidentFeedbackSummaryType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type IncidentFeedbackType @join__type(graph: LEGACY_SUBGRAPH) {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  incident: TaskType!
  user: UserType!
  feedbackType: String!
  feedbackValue: String!
  feedbackText: String
}

type IncidentFeedConnection @join__type(graph: LEGACY_SUBGRAPH) {
  pageInfo: PageInfo!
  edges: [IncidentFeedItemEdge]
}

union IncidentFeedItem @join__type(graph: LEGACY_SUBGRAPH) = DailyIncidentsFeedItem | EmptyRangeFeedItem

type IncidentFeedItemEdge @join__type(graph: LEGACY_SUBGRAPH) {
  cursor: String!
  node: IncidentFeedItem
}

"""
Incident feed item data scoped to a time bucket.
"""
type IncidentFeedItemTimeBucket @join__type(graph: LEGACY_SUBGRAPH) {
  key: String!
  title: String!

  """
  Time bucket start hour (1-24)
  """
  startHour: Int!

  """
  Time bucket end hour (1-24)
  """
  endHour: Int!

  """
  Time bucket duration in hours (1-24)
  """
  durationHours: Int!

  """
  Time bucket exact start timestamp
  """
  startTimestamp: DateTime!

  """
  Time bucket exact end timestamp
  """
  endTimestamp: DateTime!

  """
  Total incident count within this time bucket
  """
  incidentCount: Int!

  """
  Latest N incidents within this time bucket
  """
  latestIncidents: [IncidentType]
}

type IncidentGroupConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [IncidentGroupEdge]!
}

"""
A Relay edge containing a `IncidentGroup` and its cursor.
"""
type IncidentGroupEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: IncidentGroupType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type IncidentGroupType @join__type(graph: LEGACY_SUBGRAPH) {
  title: String
  date: Date
  startTimestamp: DateTime
  endTimestamp: DateTime
  shiftId: String
  shiftNumber: Int
  iconKey: String
  totalCount: Int
  incidents: [IncidentType]
}

type IncidentReopen @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type IncidentResolve @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type IncidentType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uuid: String
  title: String!
  timestamp: DateTime!
  data: JSONString
  organization: OrganizationType
  camera: CameraType
  zone: ZoneType
  incidentType: OrganizationIncidentTypeType
  priority: ApiIncidentPriorityChoices!
  status: String
  experimental: Boolean!
  assignedBy(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection!
  assignedTo(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection!
  visibleToCustomers: Boolean!
  validFeedbackCount: Int!
  invalidFeedbackCount: Int!
  unsureFeedbackCount: Int!
  corruptFeedbackCount: Int!
  reviewLevel: ApiIncidentReviewLevelChoices!
  comments(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): CommentTypeConnection!
  userIncidents: [AssignSchema!]!
  feedback: [IncidentFeedbackType!]!
  pk: Int
  bookmarked: Boolean
  thumbnailUrl: String
  videoUrl: String
  annotationsUrl: String
  dockerImageTag: String
  actorIds: [Int]
  assignees: [UserType]
  tags: [TagType]
  cameraUuid: String
  cameraConfig: CameraConfigNewModelType
}

type IncidentTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [IncidentTypeEdge]!
}

"""
A Relay edge containing a `IncidentType` and its cursor.
"""
type IncidentTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: IncidentType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
Base incident type.
"""
type IncidentTypeType @join__type(graph: LEGACY_SUBGRAPH) {
  key: String
  name: String
  backgroundColor: String
  category: String
}

type IncidentUpdate @join__type(graph: LEGACY_SUBGRAPH) {
  incident: IncidentType
}

type IntegrationFields @join__type(graph: LEGACY_SUBGRAPH) {
  rawIncidents(
    fromUtc: DateTime = null
    toUtc: DateTime = null
    organizationKey: String = null
    incidentTypeFilter: String = null
    feedbackType: String = null
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): IncidentTypeConnection
}

input InvitationInputSchema @join__type(graph: LEGACY_SUBGRAPH) {
  email: String!
  roles: [String]!
}

scalar join__FieldSet

enum join__Graph {
  LEGACY_SUBGRAPH @join__graph(name: "legacy_subgraph", url: "http://localhost:9001/graphql/")
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString @join__type(graph: LEGACY_SUBGRAPH)

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Mutation @join__type(graph: LEGACY_SUBGRAPH) {
  zoneCreate(organizationKey: String!, zoneKey: String!, zoneName: String!, zoneType: String!): ZoneCreate
  userInvite(newUsers: [InvitationInputSchema]!): UserInvite
  userUpdate(
    firstName: String = null
    isActive: Boolean = null
    lastName: String = null
    roles: [String] = null
    userId: ID!
  ): UserUpdate
  currentUserAddBookmark(incidentId: ID!): CurrentUserAddBookmark
  currentUserRemoveBookmark(incidentId: ID!): CurrentUserRemoveBookmark
  currentUserOrganizationUpdate(organizationId: ID!): CurrentUserOrganizationUpdate
  currentUserSiteUpdate(siteId: ID!): CurrentUserSiteUpdate
  organizationCreate(
    organizationKey: String!
    organizationName: String!
    timeZone: String = "US/Pacific"
  ): OrganizationCreate
  createIncidentFeedback(
    feedbackText: String!
    feedbackType: String!
    feedbackValue: String!
    incidentId: ID!
  ): CreateIncidentFeedback
  assignIncident(assignData: UserIncidentSchema!): CreateUserIncident
  unassignIncident(assigneeId: ID = null, incidentId: ID = null): DeleteUserIncident
  incidentCreateScenario(incidentId: ID = null, scenarioType: ScenarioType = null): IncidentCreateScenario
  incidentUpdate(incidentId: ID!, status: String!): IncidentUpdate
  incidentResolve(incidentId: ID!): IncidentResolve
  incidentReopen(incidentId: ID!): IncidentReopen
  incidentExportVideo(incidentId: ID!, labeled: Boolean = null): IncidentExportVideo
  createComment(incidentId: ID!, text: String!): CreateComment
  cameraCreate(cameraName: String!, cameraUuid: String!, organizationKey: String!, zoneKey: String!): CameraCreate
  cameraConfigNewCreate(
    actionableRegions: GenericScalar = null
    doors: GenericScalar = null
    drivingAreas: GenericScalar = null
    endOfAisles: GenericScalar = null
    intersections: GenericScalar = null
    noPedestrianZones: GenericScalar = null
    uuid: String!
  ): CameraConfigNewCreate
}

"""
An object with an ID
"""
interface Node @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
}

type OrganizationCreate @join__type(graph: LEGACY_SUBGRAPH) {
  organization: OrganizationType
}

"""
Organization-specific incident type.
"""
type OrganizationIncidentTypeType @join__type(graph: LEGACY_SUBGRAPH) {
  key: String
  name: String
  backgroundColor: String
}

type OrganizationType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  name: String!
  key: String!
  users(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection
  timezone: ApiOrganizationTimezoneChoices!
  pk: Int
  sites: [ZoneType]
  incidentTypes: [OrganizationIncidentTypeType]
}

type OrganizationTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [OrganizationTypeEdge]!
}

"""
A Relay edge containing a `OrganizationType` and its cursor.
"""
type OrganizationTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: OrganizationType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo @join__type(graph: LEGACY_SUBGRAPH) {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type PriorityCountType @join__type(graph: LEGACY_SUBGRAPH) {
  lowPriorityCount: Int
  mediumPriorityCount: Int
  highPriorityCount: Int
}

type Query @join__type(graph: LEGACY_SUBGRAPH) {
  analytics: AnalyticsType
  tasks(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): TaskTypeConnection
  incidentFeedbackSummary(
    internalFeedback: String = null
    externalFeedback: String = null
    hasComments: Boolean = null
    incidentType: String = null
    organizationId: String = null
    fromUtc: DateTime = null
    toUtc: DateTime = null
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): IncidentFeedbackSummaryTypeConnection
  incidentFeedbackQueue(reviewQueueContext: ReviewQueueContext = null): [IncidentType]
  integrations: IntegrationFields
  organizations(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): OrganizationTypeConnection
  organization(organizationId: ID = null, organizationKey: String = null): OrganizationType
  currentUser: UserType
  currentOrganization: OrganizationType
  comments(incidentId: ID!): [CommentType]
  recentComments: [CommentType]
  cameras: [CameraType]
  cameraConfigNew(uuid: String = null, version: Int = null): CameraConfigNewModelType
  incidentFeed(
    fromUtc: DateTime = null
    toUtc: DateTime = null
    filters: [FilterInputType] = null
    priorityFilter: [String] = null
    statusFilter: [String] = null
    incidentTypeFilter: [String] = null
    cameraFilter: [String] = null
    listFilter: [String] = null
    assigneeFilter: [String] = null
    experimentalFilter: Boolean = null
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): IncidentTypeConnection
  incidentDetails(incidentId: ID = null, incidentUuid: String = null): IncidentType
  incidentTimeline(
    startDate: Date = null
    endDate: Date = null
    filters: [FilterInputType] = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): TimelineConnection
  incidentGroupsByShift(
    startDate: Date = null
    endDate: Date = null
    filters: [FilterInputType] = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): IncidentGroupConnection
  incidentTypes: [IncidentTypeType]
}

input ReviewQueueContext @join__type(graph: LEGACY_SUBGRAPH) {
  pastIncidentTypeKeys: [String]
}

"""
An enumeration.
"""
enum ScenarioType @join__type(graph: LEGACY_SUBGRAPH) {
  POSITIVE
  NEGATIVE
}

type SeriesType @join__type(graph: LEGACY_SUBGRAPH) {
  key: DateTime
  priorityCounts: PriorityCountType
  statusCounts: StatusCountType
  incidentTypeCounts: GenericScalar
}

type StatusCountType @join__type(graph: LEGACY_SUBGRAPH) {
  openCount: Int
  resolvedCount: Int
}

type TagType @join__type(graph: LEGACY_SUBGRAPH) {
  label: String
  value: String!
}

type TaskStatsType @join__type(graph: LEGACY_SUBGRAPH) {
  totalCount: Int
  openCount: Int
  resolvedCount: Int
}

"""
An enumeration.
"""
enum TaskStatus @join__type(graph: LEGACY_SUBGRAPH) {
  OPEN
  RESOLVED
}

type TaskType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  incident: IncidentType
  assignedBy: [UserType]
  assignedTo: [UserType]
  status: TaskStatus
}

type TaskTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [TaskTypeEdge]!
}

"""
A Relay edge containing a `TaskType` and its cursor.
"""
type TaskTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: TaskType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type TimelineConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [TimelineEdge]!
}

type TimelineDayType @join__type(graph: LEGACY_SUBGRAPH) {
  date: Date
  shifts: [TimelineShiftType]
}

"""
A Relay edge containing a `Timeline` and its cursor.
"""
type TimelineEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: TimelineDayType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type TimelineShiftType @join__type(graph: LEGACY_SUBGRAPH) {
  title: String
  shiftNumber: Int
  shiftId: String
  startTimestamp: DateTime
  endTimestamp: DateTime
  incidentTypeCounts: GenericScalar
}

input UserIncidentSchema @join__type(graph: LEGACY_SUBGRAPH) {
  incidentId: ID!
  assigneeIds: [ID]
  note: String
}

type UserInvite @join__type(graph: LEGACY_SUBGRAPH) {
  status: Boolean
}

type UserStats @join__type(graph: LEGACY_SUBGRAPH) {
  bookmarkTotalCount: Int
  bookmarkOpenCount: Int
  bookmarkResolvedCount: Int
}

type UserType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  groups: GenericScalar
  firstName: String!
  lastName: String!
  email: String!
  pk: Int
  isActive: Boolean
  fullName: String
  initials: String
  permissions: GenericScalar
  organization: OrganizationType
  zone: ZoneType
  site: ZoneType
  sites: [ZoneType]
  isAdmin: Boolean
  isSuperuser: Boolean
  picture: String
  tasksAssignedBy(
    status: TaskStatus = null
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): TaskTypeConnection
  tasksAssignedByStats(fromUtc: DateTime = null, toUtc: DateTime = null): TaskStatsType
  tasksAssignedTo(
    status: TaskStatus = null
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): TaskTypeConnection
  tasksAssignedToStats(fromUtc: DateTime = null, toUtc: DateTime = null): TaskStatsType
  bookmarkedIncidents(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): IncidentTypeConnection
  stats: UserStats
}

type UserTypeConnection @join__type(graph: LEGACY_SUBGRAPH) {
  """
  Pagination data for this connection.
  """
  pageInfo: PageInfo!

  """
  Contains the nodes in this connection.
  """
  edges: [UserTypeEdge]!
}

"""
A Relay edge containing a `UserType` and its cursor.
"""
type UserTypeEdge @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The item at the end of the edge
  """
  node: UserType

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type UserUpdate @join__type(graph: LEGACY_SUBGRAPH) {
  user: UserType
}

"""
Leverages the internal Python implementation of UUID (uuid.UUID) to provide native UUID objects
in fields, resolvers and input.
"""
scalar UUID @join__type(graph: LEGACY_SUBGRAPH)

type ZoneCreate @join__type(graph: LEGACY_SUBGRAPH) {
  zone: ZoneType
}

"""
Incident stats at a zone.
"""
type ZoneIncidentStats @join__type(graph: LEGACY_SUBGRAPH) {
  totalCount: Int
  resolvedCount: Int
  openCount: Int
  highPriorityCount: Int
  mediumPriorityCount: Int
  lowPriorityCount: Int
}

"""
Incident type stats at a zone.
"""
type ZoneIncidentTypeStats @join__type(graph: LEGACY_SUBGRAPH) {
  incidentType: IncidentTypeType
  totalCount: Int

  """
  Highest totalCount value of all incident type stats returned in a query. Used by clients to compare totalCount with maxTotalCount for things like bar charts with relative widths per incident type.
  """
  maxTotalCount: Int
}

type ZoneType implements Node
  @join__implements(graph: LEGACY_SUBGRAPH, interface: "Node")
  @join__type(graph: LEGACY_SUBGRAPH) {
  """
  The ID of the object
  """
  id: ID!
  key: String!
  name: String!
  users(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): UserTypeConnection!
  cameras(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): CameraTypeConnection
  incidentCategories: [IncidentCategory]
  incidentTypes: [IncidentTypeType]
  incidentStats(startTimestamp: DateTime = null, endTimestamp: DateTime = null): ZoneIncidentStats
  incidentTypeStats(
    startTimestamp: DateTime = null
    endTimestamp: DateTime = null
    filters: [FilterInputType] = null
  ): [ZoneIncidentTypeStats]
  cameraStats(startTimestamp: DateTime = null, endTimestamp: DateTime = null): [CameraStats]
  assigneeStats(startTimestamp: DateTime!, endTimestamp: DateTime!): [AssigneeStats]
  recentComments(
    offset: Int = null
    before: String = null
    after: String = null
    first: Int = null
    last: Int = null
  ): CommentTypeConnection
  latestActivityTimestamp: DateTime
  incidentFeed(
    startDate: Date = null
    endDate: Date = null
    filters: [FilterInputType] = null
    timeBucketSizeHours: Int = null
    after: String = null
  ): IncidentFeedConnection
}
