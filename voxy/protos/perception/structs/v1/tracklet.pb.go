// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: protos/perception/structs/v1/tracklet.proto

package structspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tracklet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackId                         int64         `protobuf:"varint,1,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Category                        ActorCategory `protobuf:"varint,2,opt,name=category,proto3,enum=protos.perception.structs.v1.ActorCategory" json:"category,omitempty"`
	Timestamps                      []int64       `protobuf:"varint,3,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
	ExpireThresholdMs               int64         `protobuf:"varint,4,opt,name=expire_threshold_ms,json=expireThresholdMs,proto3" json:"expire_threshold_ms,omitempty"`
	StationarySinceMs               int64         `protobuf:"varint,5,opt,name=stationary_since_ms,json=stationarySinceMs,proto3" json:"stationary_since_ms,omitempty"`
	IsBelievedToBeWearingHardHat    bool          `protobuf:"varint,6,opt,name=is_believed_to_be_wearing_hard_hat,json=isBelievedToBeWearingHardHat,proto3" json:"is_believed_to_be_wearing_hard_hat,omitempty"`
	IsBelievedToBeWearingSafetyVest bool          `protobuf:"varint,7,opt,name=is_believed_to_be_wearing_safety_vest,json=isBelievedToBeWearingSafetyVest,proto3" json:"is_believed_to_be_wearing_safety_vest,omitempty"`
	IsAssociatedWithPit             bool          `protobuf:"varint,8,opt,name=is_associated_with_pit,json=isAssociatedWithPit,proto3" json:"is_associated_with_pit,omitempty"`
	IsAssociatedWithPerson          bool          `protobuf:"varint,9,opt,name=is_associated_with_person,json=isAssociatedWithPerson,proto3" json:"is_associated_with_person,omitempty"`
	IsBelievedToBeInUnsafePosture   bool          `protobuf:"varint,10,opt,name=is_believed_to_be_in_unsafe_posture,json=isBelievedToBeInUnsafePosture,proto3" json:"is_believed_to_be_in_unsafe_posture,omitempty"`
	IsStationary                    bool          `protobuf:"varint,11,opt,name=is_stationary,json=isStationary,proto3" json:"is_stationary,omitempty"`
	IsMotionZoneInMotion            bool          `protobuf:"varint,12,opt,name=is_motion_zone_in_motion,json=isMotionZoneInMotion,proto3" json:"is_motion_zone_in_motion,omitempty"`
	XVelocityPixelPerSec            float32       `protobuf:"fixed32,13,opt,name=x_velocity_pixel_per_sec,json=xVelocityPixelPerSec,proto3" json:"x_velocity_pixel_per_sec,omitempty"`
	YVelocityPixelPerSec            float32       `protobuf:"fixed32,14,opt,name=y_velocity_pixel_per_sec,json=yVelocityPixelPerSec,proto3" json:"y_velocity_pixel_per_sec,omitempty"`
	NormalizedPixelSpeed            float32       `protobuf:"fixed32,15,opt,name=normalized_pixel_speed,json=normalizedPixelSpeed,proto3" json:"normalized_pixel_speed,omitempty"`
}

func (x *Tracklet) Reset() {
	*x = Tracklet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_structs_v1_tracklet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracklet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracklet) ProtoMessage() {}

func (x *Tracklet) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_structs_v1_tracklet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracklet.ProtoReflect.Descriptor instead.
func (*Tracklet) Descriptor() ([]byte, []int) {
	return file_protos_perception_structs_v1_tracklet_proto_rawDescGZIP(), []int{0}
}

func (x *Tracklet) GetTrackId() int64 {
	if x != nil {
		return x.TrackId
	}
	return 0
}

func (x *Tracklet) GetCategory() ActorCategory {
	if x != nil {
		return x.Category
	}
	return ActorCategory_ACTOR_CATEGORY_UNKNOWN
}

func (x *Tracklet) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *Tracklet) GetExpireThresholdMs() int64 {
	if x != nil {
		return x.ExpireThresholdMs
	}
	return 0
}

func (x *Tracklet) GetStationarySinceMs() int64 {
	if x != nil {
		return x.StationarySinceMs
	}
	return 0
}

func (x *Tracklet) GetIsBelievedToBeWearingHardHat() bool {
	if x != nil {
		return x.IsBelievedToBeWearingHardHat
	}
	return false
}

func (x *Tracklet) GetIsBelievedToBeWearingSafetyVest() bool {
	if x != nil {
		return x.IsBelievedToBeWearingSafetyVest
	}
	return false
}

func (x *Tracklet) GetIsAssociatedWithPit() bool {
	if x != nil {
		return x.IsAssociatedWithPit
	}
	return false
}

func (x *Tracklet) GetIsAssociatedWithPerson() bool {
	if x != nil {
		return x.IsAssociatedWithPerson
	}
	return false
}

func (x *Tracklet) GetIsBelievedToBeInUnsafePosture() bool {
	if x != nil {
		return x.IsBelievedToBeInUnsafePosture
	}
	return false
}

func (x *Tracklet) GetIsStationary() bool {
	if x != nil {
		return x.IsStationary
	}
	return false
}

func (x *Tracklet) GetIsMotionZoneInMotion() bool {
	if x != nil {
		return x.IsMotionZoneInMotion
	}
	return false
}

func (x *Tracklet) GetXVelocityPixelPerSec() float32 {
	if x != nil {
		return x.XVelocityPixelPerSec
	}
	return 0
}

func (x *Tracklet) GetYVelocityPixelPerSec() float32 {
	if x != nil {
		return x.YVelocityPixelPerSec
	}
	return 0
}

func (x *Tracklet) GetNormalizedPixelSpeed() float32 {
	if x != nil {
		return x.NormalizedPixelSpeed
	}
	return 0
}

var File_protos_perception_structs_v1_tracklet_proto protoreflect.FileDescriptor

var file_protos_perception_structs_v1_tracklet_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x06, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x6c,
	0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x47, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x4d, 0x73, 0x12, 0x48, 0x0a, 0x22, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x6c,
	0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x77, 0x65, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1c, 0x69, 0x73, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x64, 0x54, 0x6f,
	0x42, 0x65, 0x57, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x72, 0x64, 0x48, 0x61, 0x74,
	0x12, 0x4e, 0x0a, 0x25, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f,
	0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x77, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x61,
	0x66, 0x65, 0x74, 0x79, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1f, 0x69, 0x73, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x64, 0x54, 0x6f, 0x42, 0x65, 0x57,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x56, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x50, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x4a, 0x0a, 0x23, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f,
	0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69,
	0x73, 0x42, 0x65, 0x6c, 0x69, 0x65, 0x76, 0x65, 0x64, 0x54, 0x6f, 0x42, 0x65, 0x49, 0x6e, 0x55,
	0x6e, 0x73, 0x61, 0x66, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x36, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x6f, 0x6e,
	0x65, 0x49, 0x6e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x18, 0x78, 0x5f, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x78, 0x56, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x12, 0x36, 0x0a, 0x18, 0x79, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x14, 0x79, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x50, 0x69,
	0x78, 0x65, 0x6c, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x42,
	0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f,
	0x78, 0x65, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x76, 0x6f, 0x78, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_perception_structs_v1_tracklet_proto_rawDescOnce sync.Once
	file_protos_perception_structs_v1_tracklet_proto_rawDescData = file_protos_perception_structs_v1_tracklet_proto_rawDesc
)

func file_protos_perception_structs_v1_tracklet_proto_rawDescGZIP() []byte {
	file_protos_perception_structs_v1_tracklet_proto_rawDescOnce.Do(func() {
		file_protos_perception_structs_v1_tracklet_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_perception_structs_v1_tracklet_proto_rawDescData)
	})
	return file_protos_perception_structs_v1_tracklet_proto_rawDescData
}

var file_protos_perception_structs_v1_tracklet_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protos_perception_structs_v1_tracklet_proto_goTypes = []interface{}{
	(*Tracklet)(nil),   // 0: protos.perception.structs.v1.Tracklet
	(ActorCategory)(0), // 1: protos.perception.structs.v1.ActorCategory
}
var file_protos_perception_structs_v1_tracklet_proto_depIdxs = []int32{
	1, // 0: protos.perception.structs.v1.Tracklet.category:type_name -> protos.perception.structs.v1.ActorCategory
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_perception_structs_v1_tracklet_proto_init() }
func file_protos_perception_structs_v1_tracklet_proto_init() {
	if File_protos_perception_structs_v1_tracklet_proto != nil {
		return
	}
	file_protos_perception_structs_v1_actor_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_perception_structs_v1_tracklet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tracklet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_perception_structs_v1_tracklet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_perception_structs_v1_tracklet_proto_goTypes,
		DependencyIndexes: file_protos_perception_structs_v1_tracklet_proto_depIdxs,
		MessageInfos:      file_protos_perception_structs_v1_tracklet_proto_msgTypes,
	}.Build()
	File_protos_perception_structs_v1_tracklet_proto = out.File
	file_protos_perception_structs_v1_tracklet_proto_rawDesc = nil
	file_protos_perception_structs_v1_tracklet_proto_goTypes = nil
	file_protos_perception_structs_v1_tracklet_proto_depIdxs = nil
}
