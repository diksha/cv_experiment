// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: protos/perception/graph_config/v1/incident_machine_params.proto

package graphconfigpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenDoorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxOpenDoorS       *int32 `protobuf:"varint,1,opt,name=max_open_door_s,json=maxOpenDoorS,proto3,oneof" json:"max_open_door_s,omitempty"`
	PerCameraCooldownS *int32 `protobuf:"varint,2,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *OpenDoorParams) Reset() {
	*x = OpenDoorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDoorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDoorParams) ProtoMessage() {}

func (x *OpenDoorParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDoorParams.ProtoReflect.Descriptor instead.
func (*OpenDoorParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{0}
}

func (x *OpenDoorParams) GetMaxOpenDoorS() int32 {
	if x != nil && x.MaxOpenDoorS != nil {
		return *x.MaxOpenDoorS
	}
	return 0
}

func (x *OpenDoorParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type IntersectionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncidentThreshLow  *float32 `protobuf:"fixed32,1,opt,name=incident_thresh_low,json=incidentThreshLow,proto3,oneof" json:"incident_thresh_low,omitempty"`
	IncidentThreshMed  *float32 `protobuf:"fixed32,2,opt,name=incident_thresh_med,json=incidentThreshMed,proto3,oneof" json:"incident_thresh_med,omitempty"`
	IncidentThreshHigh *float32 `protobuf:"fixed32,3,opt,name=incident_thresh_high,json=incidentThreshHigh,proto3,oneof" json:"incident_thresh_high,omitempty"`
	PerCameraCooldownS *int32   `protobuf:"varint,4,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *IntersectionParams) Reset() {
	*x = IntersectionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntersectionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntersectionParams) ProtoMessage() {}

func (x *IntersectionParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntersectionParams.ProtoReflect.Descriptor instead.
func (*IntersectionParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{1}
}

func (x *IntersectionParams) GetIncidentThreshLow() float32 {
	if x != nil && x.IncidentThreshLow != nil {
		return *x.IncidentThreshLow
	}
	return 0
}

func (x *IntersectionParams) GetIncidentThreshMed() float32 {
	if x != nil && x.IncidentThreshMed != nil {
		return *x.IncidentThreshMed
	}
	return 0
}

func (x *IntersectionParams) GetIncidentThreshHigh() float32 {
	if x != nil && x.IncidentThreshHigh != nil {
		return *x.IncidentThreshHigh
	}
	return 0
}

func (x *IntersectionParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type ParkingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxParkedDurationS *int32 `protobuf:"varint,1,opt,name=max_parked_duration_s,json=maxParkedDurationS,proto3,oneof" json:"max_parked_duration_s,omitempty"`
	PerCameraCooldownS *int32 `protobuf:"varint,2,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *ParkingParams) Reset() {
	*x = ParkingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkingParams) ProtoMessage() {}

func (x *ParkingParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkingParams.ProtoReflect.Descriptor instead.
func (*ParkingParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{2}
}

func (x *ParkingParams) GetMaxParkedDurationS() int32 {
	if x != nil && x.MaxParkedDurationS != nil {
		return *x.MaxParkedDurationS
	}
	return 0
}

func (x *ParkingParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type PiggybackParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPitCrossingTimeDifferencesS *int32 `protobuf:"varint,1,opt,name=max_pit_crossing_time_differences_s,json=maxPitCrossingTimeDifferencesS,proto3,oneof" json:"max_pit_crossing_time_differences_s,omitempty"`
}

func (x *PiggybackParams) Reset() {
	*x = PiggybackParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PiggybackParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PiggybackParams) ProtoMessage() {}

func (x *PiggybackParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PiggybackParams.ProtoReflect.Descriptor instead.
func (*PiggybackParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{3}
}

func (x *PiggybackParams) GetMaxPitCrossingTimeDifferencesS() int32 {
	if x != nil && x.MaxPitCrossingTimeDifferencesS != nil {
		return *x.MaxPitCrossingTimeDifferencesS
	}
	return 0
}

type SafetyVestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxNoVestS *int32 `protobuf:"varint,1,opt,name=max_no_vest_s,json=maxNoVestS,proto3,oneof" json:"max_no_vest_s,omitempty"`
}

func (x *SafetyVestParams) Reset() {
	*x = SafetyVestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafetyVestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetyVestParams) ProtoMessage() {}

func (x *SafetyVestParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetyVestParams.ProtoReflect.Descriptor instead.
func (*SafetyVestParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{4}
}

func (x *SafetyVestParams) GetMaxNoVestS() int32 {
	if x != nil && x.MaxNoVestS != nil {
		return *x.MaxNoVestS
	}
	return 0
}

type NoPedZoneParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPedZoneDurationS *int32                 `protobuf:"varint,1,opt,name=max_ped_zone_duration_s,json=maxPedZoneDurationS,proto3,oneof" json:"max_ped_zone_duration_s,omitempty"`
	ActiveHoursStartUtc *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=active_hours_start_utc,json=activeHoursStartUtc,proto3,oneof" json:"active_hours_start_utc,omitempty"`
	ActiveHoursEndUtc   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=active_hours_end_utc,json=activeHoursEndUtc,proto3,oneof" json:"active_hours_end_utc,omitempty"`
	PerCameraCooldownS  *int32                 `protobuf:"varint,4,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *NoPedZoneParams) Reset() {
	*x = NoPedZoneParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoPedZoneParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoPedZoneParams) ProtoMessage() {}

func (x *NoPedZoneParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoPedZoneParams.ProtoReflect.Descriptor instead.
func (*NoPedZoneParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{5}
}

func (x *NoPedZoneParams) GetMaxPedZoneDurationS() int32 {
	if x != nil && x.MaxPedZoneDurationS != nil {
		return *x.MaxPedZoneDurationS
	}
	return 0
}

func (x *NoPedZoneParams) GetActiveHoursStartUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveHoursStartUtc
	}
	return nil
}

func (x *NoPedZoneParams) GetActiveHoursEndUtc() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveHoursEndUtc
	}
	return nil
}

func (x *NoPedZoneParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type NoStopAtAisleEndParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncidentThreshLow  *float32 `protobuf:"fixed32,1,opt,name=incident_thresh_low,json=incidentThreshLow,proto3,oneof" json:"incident_thresh_low,omitempty"`
	IncidentThreshMed  *float32 `protobuf:"fixed32,2,opt,name=incident_thresh_med,json=incidentThreshMed,proto3,oneof" json:"incident_thresh_med,omitempty"`
	IncidentThreshHigh *float32 `protobuf:"fixed32,3,opt,name=incident_thresh_high,json=incidentThreshHigh,proto3,oneof" json:"incident_thresh_high,omitempty"`
	PerCameraCooldownS *int32   `protobuf:"varint,4,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *NoStopAtAisleEndParams) Reset() {
	*x = NoStopAtAisleEndParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoStopAtAisleEndParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoStopAtAisleEndParams) ProtoMessage() {}

func (x *NoStopAtAisleEndParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoStopAtAisleEndParams.ProtoReflect.Descriptor instead.
func (*NoStopAtAisleEndParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{6}
}

func (x *NoStopAtAisleEndParams) GetIncidentThreshLow() float32 {
	if x != nil && x.IncidentThreshLow != nil {
		return *x.IncidentThreshLow
	}
	return 0
}

func (x *NoStopAtAisleEndParams) GetIncidentThreshMed() float32 {
	if x != nil && x.IncidentThreshMed != nil {
		return *x.IncidentThreshMed
	}
	return 0
}

func (x *NoStopAtAisleEndParams) GetIncidentThreshHigh() float32 {
	if x != nil && x.IncidentThreshHigh != nil {
		return *x.IncidentThreshHigh
	}
	return 0
}

func (x *NoStopAtAisleEndParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type ProductionLineDownParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxNoMotionDetectionS *int32 `protobuf:"varint,1,opt,name=max_no_motion_detection_s,json=maxNoMotionDetectionS,proto3,oneof" json:"max_no_motion_detection_s,omitempty"`
	PerActorCooldownS     *int32 `protobuf:"varint,2,opt,name=per_actor_cooldown_s,json=perActorCooldownS,proto3,oneof" json:"per_actor_cooldown_s,omitempty"`
}

func (x *ProductionLineDownParams) Reset() {
	*x = ProductionLineDownParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductionLineDownParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductionLineDownParams) ProtoMessage() {}

func (x *ProductionLineDownParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductionLineDownParams.ProtoReflect.Descriptor instead.
func (*ProductionLineDownParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{7}
}

func (x *ProductionLineDownParams) GetMaxNoMotionDetectionS() int32 {
	if x != nil && x.MaxNoMotionDetectionS != nil {
		return *x.MaxNoMotionDetectionS
	}
	return 0
}

func (x *ProductionLineDownParams) GetPerActorCooldownS() int32 {
	if x != nil && x.PerActorCooldownS != nil {
		return *x.PerActorCooldownS
	}
	return 0
}

type HardHatParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerCameraCooldownS *int32 `protobuf:"varint,1,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
	MaxNoHatS          *int32 `protobuf:"varint,2,opt,name=max_no_hat_s,json=maxNoHatS,proto3,oneof" json:"max_no_hat_s,omitempty"`
}

func (x *HardHatParams) Reset() {
	*x = HardHatParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardHatParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardHatParams) ProtoMessage() {}

func (x *HardHatParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardHatParams.ProtoReflect.Descriptor instead.
func (*HardHatParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{8}
}

func (x *HardHatParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

func (x *HardHatParams) GetMaxNoHatS() int32 {
	if x != nil && x.MaxNoHatS != nil {
		return *x.MaxNoHatS
	}
	return 0
}

type HighVisHatOrVestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerCameraCooldownS *int32 `protobuf:"varint,1,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *HighVisHatOrVestParams) Reset() {
	*x = HighVisHatOrVestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighVisHatOrVestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighVisHatOrVestParams) ProtoMessage() {}

func (x *HighVisHatOrVestParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighVisHatOrVestParams.ProtoReflect.Descriptor instead.
func (*HighVisHatOrVestParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{9}
}

func (x *HighVisHatOrVestParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type DoorIntersectionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerCameraCooldownS *int32 `protobuf:"varint,1,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *DoorIntersectionParams) Reset() {
	*x = DoorIntersectionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoorIntersectionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoorIntersectionParams) ProtoMessage() {}

func (x *DoorIntersectionParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoorIntersectionParams.ProtoReflect.Descriptor instead.
func (*DoorIntersectionParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{10}
}

func (x *DoorIntersectionParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type DoorViolationParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerCameraCooldownS *int32 `protobuf:"varint,1,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
}

func (x *DoorViolationParams) Reset() {
	*x = DoorViolationParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoorViolationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoorViolationParams) ProtoMessage() {}

func (x *DoorViolationParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoorViolationParams.ProtoReflect.Descriptor instead.
func (*DoorViolationParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{11}
}

func (x *DoorViolationParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

type BumpCapParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerCameraCooldownS *int32 `protobuf:"varint,1,opt,name=per_camera_cooldown_s,json=perCameraCooldownS,proto3,oneof" json:"per_camera_cooldown_s,omitempty"`
	MaxNoBumpcapS      *int32 `protobuf:"varint,2,opt,name=max_no_bumpcap_s,json=maxNoBumpcapS,proto3,oneof" json:"max_no_bumpcap_s,omitempty"`
}

func (x *BumpCapParams) Reset() {
	*x = BumpCapParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BumpCapParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BumpCapParams) ProtoMessage() {}

func (x *BumpCapParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BumpCapParams.ProtoReflect.Descriptor instead.
func (*BumpCapParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{12}
}

func (x *BumpCapParams) GetPerCameraCooldownS() int32 {
	if x != nil && x.PerCameraCooldownS != nil {
		return *x.PerCameraCooldownS
	}
	return 0
}

func (x *BumpCapParams) GetMaxNoBumpcapS() int32 {
	if x != nil && x.MaxNoBumpcapS != nil {
		return *x.MaxNoBumpcapS
	}
	return 0
}

type ObstructionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxObstructionDurationS *int32 `protobuf:"varint,1,opt,name=max_obstruction_duration_s,json=maxObstructionDurationS,proto3,oneof" json:"max_obstruction_duration_s,omitempty"`
	PerActorCooldownS       *int32 `protobuf:"varint,2,opt,name=per_actor_cooldown_s,json=perActorCooldownS,proto3,oneof" json:"per_actor_cooldown_s,omitempty"`
}

func (x *ObstructionParams) Reset() {
	*x = ObstructionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObstructionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObstructionParams) ProtoMessage() {}

func (x *ObstructionParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObstructionParams.ProtoReflect.Descriptor instead.
func (*ObstructionParams) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{13}
}

func (x *ObstructionParams) GetMaxObstructionDurationS() int32 {
	if x != nil && x.MaxObstructionDurationS != nil {
		return *x.MaxObstructionDurationS
	}
	return 0
}

func (x *ObstructionParams) GetPerActorCooldownS() int32 {
	if x != nil && x.PerActorCooldownS != nil {
		return *x.PerActorCooldownS
	}
	return 0
}

type ModelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenDoor           *OpenDoorParams           `protobuf:"bytes,1,opt,name=open_door,json=openDoor,proto3,oneof" json:"open_door,omitempty"`
	Intersection       *IntersectionParams       `protobuf:"bytes,2,opt,name=intersection,proto3,oneof" json:"intersection,omitempty"`
	SafetyVest         *SafetyVestParams         `protobuf:"bytes,3,opt,name=safety_vest,json=safetyVest,proto3,oneof" json:"safety_vest,omitempty"`
	NoPedZone          *NoPedZoneParams          `protobuf:"bytes,4,opt,name=no_ped_zone,json=noPedZone,proto3,oneof" json:"no_ped_zone,omitempty"`
	NoStopAtAisleEnd   *NoStopAtAisleEndParams   `protobuf:"bytes,5,opt,name=no_stop_at_aisle_end,json=noStopAtAisleEnd,proto3,oneof" json:"no_stop_at_aisle_end,omitempty"`
	ProductionLineDown *ProductionLineDownParams `protobuf:"bytes,6,opt,name=production_line_down,json=productionLineDown,proto3,oneof" json:"production_line_down,omitempty"`
	HardHat            *HardHatParams            `protobuf:"bytes,7,opt,name=hard_hat,json=hardHat,proto3,oneof" json:"hard_hat,omitempty"`
	HighVisHatOrVest   *HighVisHatOrVestParams   `protobuf:"bytes,8,opt,name=high_vis_hat_or_vest,json=highVisHatOrVest,proto3,oneof" json:"high_vis_hat_or_vest,omitempty"`
	DoorIntersection   *DoorIntersectionParams   `protobuf:"bytes,9,opt,name=door_intersection,json=doorIntersection,proto3,oneof" json:"door_intersection,omitempty"`
	DoorViolation      *DoorViolationParams      `protobuf:"bytes,10,opt,name=door_violation,json=doorViolation,proto3,oneof" json:"door_violation,omitempty"`
	Parking            *ParkingParams            `protobuf:"bytes,11,opt,name=parking,proto3,oneof" json:"parking,omitempty"`
	Piggyback          *PiggybackParams          `protobuf:"bytes,12,opt,name=piggyback,proto3,oneof" json:"piggyback,omitempty"`
	BumpCap            *BumpCapParams            `protobuf:"bytes,13,opt,name=bump_cap,json=bumpCap,proto3,oneof" json:"bump_cap,omitempty"`
	Obstruction        *ObstructionParams        `protobuf:"bytes,14,opt,name=obstruction,proto3,oneof" json:"obstruction,omitempty"`
}

func (x *ModelConfig) Reset() {
	*x = ModelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelConfig) ProtoMessage() {}

func (x *ModelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelConfig.ProtoReflect.Descriptor instead.
func (*ModelConfig) Descriptor() ([]byte, []int) {
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP(), []int{14}
}

func (x *ModelConfig) GetOpenDoor() *OpenDoorParams {
	if x != nil {
		return x.OpenDoor
	}
	return nil
}

func (x *ModelConfig) GetIntersection() *IntersectionParams {
	if x != nil {
		return x.Intersection
	}
	return nil
}

func (x *ModelConfig) GetSafetyVest() *SafetyVestParams {
	if x != nil {
		return x.SafetyVest
	}
	return nil
}

func (x *ModelConfig) GetNoPedZone() *NoPedZoneParams {
	if x != nil {
		return x.NoPedZone
	}
	return nil
}

func (x *ModelConfig) GetNoStopAtAisleEnd() *NoStopAtAisleEndParams {
	if x != nil {
		return x.NoStopAtAisleEnd
	}
	return nil
}

func (x *ModelConfig) GetProductionLineDown() *ProductionLineDownParams {
	if x != nil {
		return x.ProductionLineDown
	}
	return nil
}

func (x *ModelConfig) GetHardHat() *HardHatParams {
	if x != nil {
		return x.HardHat
	}
	return nil
}

func (x *ModelConfig) GetHighVisHatOrVest() *HighVisHatOrVestParams {
	if x != nil {
		return x.HighVisHatOrVest
	}
	return nil
}

func (x *ModelConfig) GetDoorIntersection() *DoorIntersectionParams {
	if x != nil {
		return x.DoorIntersection
	}
	return nil
}

func (x *ModelConfig) GetDoorViolation() *DoorViolationParams {
	if x != nil {
		return x.DoorViolation
	}
	return nil
}

func (x *ModelConfig) GetParking() *ParkingParams {
	if x != nil {
		return x.Parking
	}
	return nil
}

func (x *ModelConfig) GetPiggyback() *PiggybackParams {
	if x != nil {
		return x.Piggyback
	}
	return nil
}

func (x *ModelConfig) GetBumpCap() *BumpCapParams {
	if x != nil {
		return x.BumpCap
	}
	return nil
}

func (x *ModelConfig) GetObstruction() *ObstructionParams {
	if x != nil {
		return x.Obstruction
	}
	return nil
}

var File_protos_perception_graph_config_v1_incident_machine_params_proto protoreflect.FileDescriptor

var file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f,
	0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72,
	0x53, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x73,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f,
	0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00,
	0x52, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x4c, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x12, 0x69, 0x6e, 0x63,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x48, 0x69, 0x67, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x03, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f,
	0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c,
	0x6f, 0x77, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x64, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x68,
	0x69, 0x67, 0x68, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22, 0xb3, 0x01,
	0x0a, 0x0d, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x36, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42,
	0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x67, 0x67, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x50, 0x0a, 0x23, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x69, 0x74, 0x5f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x1e, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x74, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x88, 0x01, 0x01, 0x42, 0x26, 0x0a, 0x24, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x69, 0x74, 0x5f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f,
	0x73, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x56, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f,
	0x76, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x56, 0x65, 0x73, 0x74, 0x53, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x22,
	0x96, 0x03, 0x0a, 0x0f, 0x4e, 0x6f, 0x50, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x64, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x64, 0x5a, 0x6f,
	0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x12, 0x54,
	0x0a, 0x16, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x13, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x74,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02,
	0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x45, 0x6e, 0x64,
	0x55, 0x74, 0x63, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x1a,
	0x0a, 0x18, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x75, 0x74, 0x63, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x74, 0x63, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f,
	0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22, 0xd4, 0x02, 0x0a, 0x16, 0x4e, 0x6f, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x74, 0x41, 0x69, 0x73, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x4c, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a,
	0x14, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x12, 0x69,
	0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x48, 0x69, 0x67,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x6c, 0x6f, 0x77, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x64, 0x42, 0x17, 0x0a, 0x15,
	0x5f, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x68, 0x69, 0x67, 0x68, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22,
	0xc6, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x19,
	0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x70,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x11, 0x70, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01,
	0x01, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x48, 0x61, 0x72,
	0x64, 0x48, 0x61, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65,
	0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x70, 0x65, 0x72,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x68, 0x61, 0x74,
	0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4e,
	0x6f, 0x48, 0x61, 0x74, 0x53, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x68, 0x61,
	0x74, 0x5f, 0x73, 0x22, 0x6a, 0x0a, 0x16, 0x48, 0x69, 0x67, 0x68, 0x56, 0x69, 0x73, 0x48, 0x61,
	0x74, 0x4f, 0x72, 0x56, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a,
	0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12,
	0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22,
	0x6a, 0x0a, 0x16, 0x44, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01,
	0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x44,
	0x6f, 0x6f, 0x72, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f,
	0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x42, 0x75, 0x6d, 0x70, 0x43, 0x61, 0x70,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x70, 0x65, 0x72, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x63, 0x61, 0x70,
	0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4e,
	0x6f, 0x42, 0x75, 0x6d, 0x70, 0x63, 0x61, 0x70, 0x53, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e,
	0x6f, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x63, 0x61, 0x70, 0x5f, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x11,
	0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x40, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x4f, 0x62, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x11, 0x70, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6f,
	0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x88, 0x01, 0x01, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x73, 0x22, 0xbb, 0x0c, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x53, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44,
	0x6f, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x48, 0x01, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79,
	0x5f, 0x76, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x56, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x48, 0x02, 0x52, 0x0a, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x56, 0x65, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x57, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x70, 0x65, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x50, 0x65, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x03, 0x52, 0x09, 0x6e, 0x6f,
	0x50, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x6e, 0x0a, 0x14, 0x6e, 0x6f,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x73, 0x6c, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x53,
	0x74, 0x6f, 0x70, 0x41, 0x74, 0x41, 0x69, 0x73, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x48, 0x04, 0x52, 0x10, 0x6e, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x74, 0x41,
	0x69, 0x73, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x72, 0x0a, 0x14, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x6f,
	0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x05, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x50,
	0x0a, 0x08, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x48, 0x61, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x06, 0x52, 0x07, 0x68, 0x61, 0x72, 0x64, 0x48, 0x61, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x6e, 0x0a, 0x14, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x76, 0x69, 0x73, 0x5f, 0x68, 0x61, 0x74,
	0x5f, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x56, 0x69, 0x73, 0x48, 0x61, 0x74, 0x4f, 0x72, 0x56,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x07, 0x52, 0x10, 0x68, 0x69, 0x67,
	0x68, 0x56, 0x69, 0x73, 0x48, 0x61, 0x74, 0x4f, 0x72, 0x56, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x6b, 0x0a, 0x11, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x08, 0x52, 0x10, 0x64, 0x6f, 0x6f, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a,
	0x0e, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6f, 0x72, 0x56, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x09, 0x52,
	0x0d, 0x64, 0x6f, 0x6f, 0x72, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x48, 0x0a, 0x52, 0x07, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x55, 0x0a, 0x09, 0x70, 0x69, 0x67, 0x67, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x67, 0x67, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x0b, 0x52, 0x09, 0x70, 0x69, 0x67,
	0x67, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x08, 0x62, 0x75, 0x6d,
	0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x6d, 0x70, 0x43, 0x61, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x0c, 0x52,
	0x07, 0x62, 0x75, 0x6d, 0x70, 0x43, 0x61, 0x70, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a, 0x0b, 0x6f,
	0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x0d, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x61, 0x66, 0x65,
	0x74, 0x79, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x6f, 0x5f, 0x70,
	0x65, 0x64, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6e, 0x6f, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x73, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x68, 0x61, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x5f,
	0x76, 0x69, 0x73, 0x5f, 0x68, 0x61, 0x74, 0x5f, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x69, 0x67, 0x67, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f,
	0x78, 0x65, 0x6c, 0x2d, 0x61, 0x69, 0x2f, 0x76, 0x6f, 0x78, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescOnce sync.Once
	file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescData = file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDesc
)

func file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescGZIP() []byte {
	file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescOnce.Do(func() {
		file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescData)
	})
	return file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDescData
}

var file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protos_perception_graph_config_v1_incident_machine_params_proto_goTypes = []interface{}{
	(*OpenDoorParams)(nil),           // 0: protos.perception.graph_config.v1.OpenDoorParams
	(*IntersectionParams)(nil),       // 1: protos.perception.graph_config.v1.IntersectionParams
	(*ParkingParams)(nil),            // 2: protos.perception.graph_config.v1.ParkingParams
	(*PiggybackParams)(nil),          // 3: protos.perception.graph_config.v1.PiggybackParams
	(*SafetyVestParams)(nil),         // 4: protos.perception.graph_config.v1.SafetyVestParams
	(*NoPedZoneParams)(nil),          // 5: protos.perception.graph_config.v1.NoPedZoneParams
	(*NoStopAtAisleEndParams)(nil),   // 6: protos.perception.graph_config.v1.NoStopAtAisleEndParams
	(*ProductionLineDownParams)(nil), // 7: protos.perception.graph_config.v1.ProductionLineDownParams
	(*HardHatParams)(nil),            // 8: protos.perception.graph_config.v1.HardHatParams
	(*HighVisHatOrVestParams)(nil),   // 9: protos.perception.graph_config.v1.HighVisHatOrVestParams
	(*DoorIntersectionParams)(nil),   // 10: protos.perception.graph_config.v1.DoorIntersectionParams
	(*DoorViolationParams)(nil),      // 11: protos.perception.graph_config.v1.DoorViolationParams
	(*BumpCapParams)(nil),            // 12: protos.perception.graph_config.v1.BumpCapParams
	(*ObstructionParams)(nil),        // 13: protos.perception.graph_config.v1.ObstructionParams
	(*ModelConfig)(nil),              // 14: protos.perception.graph_config.v1.ModelConfig
	(*timestamppb.Timestamp)(nil),    // 15: google.protobuf.Timestamp
}
var file_protos_perception_graph_config_v1_incident_machine_params_proto_depIdxs = []int32{
	15, // 0: protos.perception.graph_config.v1.NoPedZoneParams.active_hours_start_utc:type_name -> google.protobuf.Timestamp
	15, // 1: protos.perception.graph_config.v1.NoPedZoneParams.active_hours_end_utc:type_name -> google.protobuf.Timestamp
	0,  // 2: protos.perception.graph_config.v1.ModelConfig.open_door:type_name -> protos.perception.graph_config.v1.OpenDoorParams
	1,  // 3: protos.perception.graph_config.v1.ModelConfig.intersection:type_name -> protos.perception.graph_config.v1.IntersectionParams
	4,  // 4: protos.perception.graph_config.v1.ModelConfig.safety_vest:type_name -> protos.perception.graph_config.v1.SafetyVestParams
	5,  // 5: protos.perception.graph_config.v1.ModelConfig.no_ped_zone:type_name -> protos.perception.graph_config.v1.NoPedZoneParams
	6,  // 6: protos.perception.graph_config.v1.ModelConfig.no_stop_at_aisle_end:type_name -> protos.perception.graph_config.v1.NoStopAtAisleEndParams
	7,  // 7: protos.perception.graph_config.v1.ModelConfig.production_line_down:type_name -> protos.perception.graph_config.v1.ProductionLineDownParams
	8,  // 8: protos.perception.graph_config.v1.ModelConfig.hard_hat:type_name -> protos.perception.graph_config.v1.HardHatParams
	9,  // 9: protos.perception.graph_config.v1.ModelConfig.high_vis_hat_or_vest:type_name -> protos.perception.graph_config.v1.HighVisHatOrVestParams
	10, // 10: protos.perception.graph_config.v1.ModelConfig.door_intersection:type_name -> protos.perception.graph_config.v1.DoorIntersectionParams
	11, // 11: protos.perception.graph_config.v1.ModelConfig.door_violation:type_name -> protos.perception.graph_config.v1.DoorViolationParams
	2,  // 12: protos.perception.graph_config.v1.ModelConfig.parking:type_name -> protos.perception.graph_config.v1.ParkingParams
	3,  // 13: protos.perception.graph_config.v1.ModelConfig.piggyback:type_name -> protos.perception.graph_config.v1.PiggybackParams
	12, // 14: protos.perception.graph_config.v1.ModelConfig.bump_cap:type_name -> protos.perception.graph_config.v1.BumpCapParams
	13, // 15: protos.perception.graph_config.v1.ModelConfig.obstruction:type_name -> protos.perception.graph_config.v1.ObstructionParams
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_protos_perception_graph_config_v1_incident_machine_params_proto_init() }
func file_protos_perception_graph_config_v1_incident_machine_params_proto_init() {
	if File_protos_perception_graph_config_v1_incident_machine_params_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDoorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntersectionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParkingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PiggybackParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafetyVestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoPedZoneParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoStopAtAisleEndParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductionLineDownParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardHatParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighVisHatOrVestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoorIntersectionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoorViolationParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BumpCapParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObstructionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_perception_graph_config_v1_incident_machine_params_proto_goTypes,
		DependencyIndexes: file_protos_perception_graph_config_v1_incident_machine_params_proto_depIdxs,
		MessageInfos:      file_protos_perception_graph_config_v1_incident_machine_params_proto_msgTypes,
	}.Build()
	File_protos_perception_graph_config_v1_incident_machine_params_proto = out.File
	file_protos_perception_graph_config_v1_incident_machine_params_proto_rawDesc = nil
	file_protos_perception_graph_config_v1_incident_machine_params_proto_goTypes = nil
	file_protos_perception_graph_config_v1_incident_machine_params_proto_depIdxs = nil
}
