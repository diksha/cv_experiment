enabled: true
environment: ${ENVIRONMENT}
image:
  repository: ${PORTAL_REPO}
  pullPolicy: Always
  tag: ${PORTAL_IMAGE_TAG}

serviceAccount:
  name: ${SERVICE_ACCOUNT_NAME}
  create: false

secrets:
  name: secret-store
  mountPath: /mnt/secrets-store
  secretProviderClass: ${SECRET_PROVIDER_NAME}

service:
  type: ClusterIP
  # port: 443
  containerPort: 8080
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
  #   service.beta.kubernetes.io/aws-load-balancer-type: "external"
  #   service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
  #   service.beta.kubernetes.io/load-balancer-source-ranges: 0.0.0.0/8
  #   service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${ACM_ARN}
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

lifecycle:
  preStop:
    exec:
      command: ["/bin/sh", "-c", "sleep 150"]

ingress:
  enabled: false

resources:
  requests:
    cpu: 512m
    memory: 2048Mi
  limits:
    cpu: 512m
    memory: 2048Mi

terminationGracePeriodSeconds: 180

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

livenessProbe:
  failureThreshold: 6
  httpGet:
    path: /api/health/liveness/
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 30

readinessProbe:
  failureThreshold: 6
  httpGet:
    path: /api/health/readiness/
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 30


env:
  config:
    SECRETS_FILEPATH: /mnt/secrets-store/portal
    SECRETS_GOOGLE_SERVICE_ACCOUNT_JSON_FILEPATH: /mnt/secrets-store/portal_google_service_account_json
    BASE_URL: https://${DOMAIN}
    GIT_REVISION: ${PORTAL_IMAGE_TAG}
    DEPLOYMENT_PROVIDER: eks-final


affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: instance
              operator: In
              values:
                - ${NAME}
        topologyKey: "kubernetes.io/hostname"

podDisruptionBudget:
  enabled: true
  minAvailable: 2
