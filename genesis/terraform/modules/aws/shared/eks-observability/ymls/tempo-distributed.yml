ingester:
  replicas: 1
  resources:
    requests:
      cpu: 100m
    limits:
      cpu: 1000m
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 20
  config:
    # -- Number of copies of spans to store in the ingester ring
    replication_factor: 1
# Configuration for the metrics-generator
metricsGenerator:
  enabled: false
# Configuration for the distributor
distributor:
  replicas: 1
  resources:
    requests:
      cpu: 100m
    limits:
      cpu: 1000m
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
  config:
    log_received_traces: false
search:
  enabled: true
server:
  logFormat: json
  logLevel: error
traces:
  otlp:
    http:
      # -- Enable Tempo to ingest Open Telemetry HTTP traces
      enabled: true
      # -- HTTP receiver advanced config
      receiverConfig: {}
    grpc:
      # -- Enable Tempo to ingest Open Telemetry GRPC traces
      enabled: true
      # -- GRPC receiver advanced config
      receiverConfig: {}
storage:
  trace:
    backend: s3
    s3:
      endpoint: s3.amazonaws.com
      bucket: ${BUCKET_NAME}
      region: ${AWS_REGION}

# Configuration for the gateway. Same can be used for Tempo and Loki both
gateway:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
    limits:
      cpu: 1000m
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 60
    # If setting memory utilization please set the resource requests and limits.
    # targetMemoryUtilizationPercentage:
  verboseLogging: false
  basicAuth:
    enabled: false
    username: ${USERNAME}
  service:
    type: ClusterIP
    # annotations:
    #   service.beta.kubernetes.io/aws-load-balancer-type: "external"
    #   service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    #   service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    #   service.beta.kubernetes.io/load-balancer-source-ranges: "10.0.0.0/8"

serviceAccount:
  create: false
  name: ${SERVICE_ACCOUNT_NAME}

queryFrontend:
  query:
    config: |
      backend: 127.0.0.1:3100
config: |
  multitenancy_enabled: {{ .Values.multitenancyEnabled }}
  search_enabled: {{ .Values.search.enabled }}
  metrics_generator_enabled: {{ .Values.metricsGenerator.enabled }}
  compactor:
    compaction:
      block_retention: {{ .Values.compactor.config.compaction.block_retention }}
    ring:
      kvstore:
        store: memberlist
  {{- if .Values.metricsGenerator.enabled }}
  metrics_generator:
    ring:
      kvstore:
        store: memberlist
    processor:
      service_graphs:
        max_items: {{ .Values.metricsGenerator.config.service_graphs_max_items }}
      span_metrics:
        dimensions: {{ .Values.metricsGenerator.config.span_metrics_dimensions }} 
    storage:
      path: /var/tempo/wal
      remote_write:
        {{- toYaml .Values.metricsGenerator.config.storage_remote_write | nindent 6}}
  {{- end }}
  distributor:
    ring:
      kvstore:
        store: memberlist
    receivers:
      {{- if  or (.Values.traces.jaeger.thriftCompact.enabled) (.Values.traces.jaeger.thriftBinary.enabled) (.Values.traces.jaeger.thriftHttp.enabled) (.Values.traces.jaeger.grpc.enabled) }}
      jaeger:
        protocols:
          {{- if .Values.traces.jaeger.thriftCompact.enabled }}
          thrift_compact:
            {{- $mergedJaegerThriftCompactConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6831") .Values.traces.jaeger.thriftCompact.receiverConfig }}
            {{- toYaml $mergedJaegerThriftCompactConfig | nindent 10 }}
          {{- end }}
          {{- if .Values.traces.jaeger.thriftBinary.enabled }}
          thrift_binary:
            {{- $mergedJaegerThriftBinaryConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6832") .Values.traces.jaeger.thriftBinary.receiverConfig }}
            {{- toYaml $mergedJaegerThriftBinaryConfig | nindent 10 }}
          {{- end }}
          {{- if .Values.traces.jaeger.thriftHttp.enabled }}
          thrift_http:
            {{- $mergedJaegerThriftHttpConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14268") .Values.traces.jaeger.thriftHttp.receiverConfig }}
            {{- toYaml $mergedJaegerThriftHttpConfig | nindent 10 }}
          {{- end }}
          {{- if .Values.traces.jaeger.grpc.enabled }}
          grpc:
            {{- $mergedJaegerGrpcConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14250") .Values.traces.jaeger.grpc.receiverConfig }}
            {{- toYaml $mergedJaegerGrpcConfig | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.traces.zipkin.enabled }}
      zipkin:
        {{- $mergedZipkinReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:9411") .Values.traces.zipkin.receiverConfig }}
        {{- toYaml $mergedZipkinReceiverConfig | nindent 6 }}
      {{- end }}
      {{- if or (.Values.traces.otlp.http.enabled) (.Values.traces.otlp.grpc.enabled) }}
      otlp:
        protocols:
          {{- if .Values.traces.otlp.http.enabled }}
          http:
            {{- $mergedOtlpHttpReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:55681") .Values.traces.otlp.http.receiverConfig }}
            {{- toYaml $mergedOtlpHttpReceiverConfig | nindent 10 }}
          {{- end }}
          {{- if .Values.traces.otlp.grpc.enabled }}
          grpc:
            {{- $mergedOtlpGrpcReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:4317") .Values.traces.otlp.grpc.receiverConfig }}
            {{- toYaml $mergedOtlpGrpcReceiverConfig | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.traces.opencensus.enabled }}
      opencensus:
        {{- $mergedOpencensusReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:55678") .Values.traces.opencensus.receiverConfig }}
        {{- toYaml $mergedOpencensusReceiverConfig | nindent 6 }}
      {{- end }}
      {{- if .Values.traces.kafka }}
      kafka:
        {{- toYaml .Values.traces.kafka | nindent 6 }}
      {{- end }}
    {{- if .Values.distributor.config.log_received_traces }}
    log_received_traces: {{ .Values.distributor.config.log_received_traces }}
    {{- end }}
    {{- if .Values.distributor.config.extend_writes }}
    extend_writes: {{ .Values.distributor.config.extend_writes }}
    {{- end }}
    {{- if .Values.distributor.config.search_tags_deny_list }}
    search_tags_deny_list:
      {{- with .Values.distributor.config.search_tags_deny_list }}
      {{- toYaml . | nindent 4 }}
      {{- end }}
    {{- end }}
  querier:
    frontend_worker:
      frontend_address: {{ include "tempo.queryFrontendFullname" . }}-discovery:9095
      {{- if .Values.querier.config.frontend_worker.grpc_client_config }}
      grpc_client_config:
        {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}
      {{- end }}
  ingester:
    lifecycler:
      ring:
        replication_factor: {{ .Values.ingester.config.replication_factor }}
        kvstore:
          store: memberlist
      tokens_file_path: /var/tempo/tokens.json
    {{- if .Values.ingester.config.trace_idle_period }}
    trace_idle_period: {{ .Values.ingester.config.trace_idle_period }}
    {{- end }}
    {{- if .Values.ingester.config.flush_check_period }}
    flush_check_period: {{ .Values.ingester.config.flush_check_period }}
    {{- end }}
    {{- if .Values.ingester.config.max_block_bytes }}
    max_block_bytes: {{ .Values.ingester.config.max_block_bytes }}
    {{- end }}
    {{- if .Values.ingester.config.max_block_duration }}
    max_block_duration: {{ .Values.ingester.config.max_block_duration }}
    {{- end }}
    {{- if .Values.ingester.config.complete_block_timeout }}
    complete_block_timeout: {{ .Values.ingester.config.complete_block_timeout }}
    {{- end }}
  memberlist:
    abort_if_cluster_join_fails: false
    join_members:
      - {{ include "tempo.fullname" . }}-gossip-ring
  overrides:
    {{- toYaml .Values.global_overrides | nindent 2 }}
  server:
    http_listen_port: {{ .Values.server.httpListenPort }}
    log_level: {{ .Values.server.logLevel }}
    log_format: {{ .Values.server.logFormat }}
    grpc_server_max_recv_msg_size: {{ .Values.server.grpc_server_max_recv_msg_size }}
    grpc_server_max_send_msg_size: {{ .Values.server.grpc_server_max_send_msg_size }}
  storage:
    trace:
      backend: {{.Values.storage.trace.backend}}
      {{- if eq .Values.storage.trace.backend "gcs"}}
      gcs:
        {{- toYaml .Values.storage.trace.gcs | nindent 6}}
      {{- end}}
      {{- if eq .Values.storage.trace.backend "s3"}}
      s3:
        {{- toYaml .Values.storage.trace.s3 | nindent 6}}
      {{- end}}
      {{- if eq .Values.storage.trace.backend "azure"}}
      azure:
        {{- toYaml .Values.storage.trace.azure | nindent 6}}
      {{- end}}
      blocklist_poll: 5m
      local:
        path: /var/tempo/traces
      wal:
        path: /var/tempo/wal
      cache: memcached
      pool:
        queue_depth: 2000
      memcached:
        consistent_hash: true
        host: {{ include "tempo.fullname" . }}-memcached
        service: memcached-client
        timeout: 500ms
  query_frontend:
    search:
      max_duration: 0
serviceMonitor:
  enabled: true
  labels:
    prometheus: default
global_overrides:
  # metrics_generator_processors:
  #   - service-graphs
  #   - span-metrics
  max_traces_per_user: 0
  max_search_bytes_per_trace: 20000
  max_bytes_per_tag_values_query: 50000000
  metrics_generator_max_active_series: 0
