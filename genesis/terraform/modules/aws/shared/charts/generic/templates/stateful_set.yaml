{{- if .Values.stateful_set }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "generic.fullname" . }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  serviceName: {{ include "generic.fullname" . }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates: []
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [{{ .Values.command }}]
          args: {{- range .Values.args }}
          - {{. | quote}}
          {{- end }}
          volumeMounts: []
          env:
          - name:  HELM_RELEASE_NAME
            value: {{ .Release.Name }}
          - name:  IMAGE_REPO
            value: "{{ .Values.image.repository }}"
          - name:  IMAGE_TAG
            value: {{ .Values.image.tag | default .Chart.AppVersion }}
          envFrom:
            - secretRef:
                name: {{ include "generic.fullname" . }}

          {{- range .Values.env.secret_refs }}

            - secretRef:
                name: {{ . | quote }}

          {{- end }}

            - configMapRef:
                name: {{ include "generic.fullname" . }}

          {{- range .Values.env.config_refs }}

            - configMapRef:
                name: {{ . | quote }}

          {{- end }}
          ports:
            - name: http
              containerPort: {{ default 80 .Values.service.containerPort }}
              protocol: TCP

{{ if not .Values.non_web_app }}


          livenessProbe:
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
            httpGet:
              path: {{ default "/" .Values.healthcheck_path }}
              port: http
          readinessProbe:
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
            httpGet:
              path: {{ default "/" .Values.healthcheck_path }}
              port: http


{{ end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      nodeSelector:
      {{- range $k, $v := .Values.nodeSelector }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}

